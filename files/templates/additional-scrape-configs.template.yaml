# Additional scrape configuration for the tenant clusters components
# Add scrape configuration for docker
- job_name: {{ .ClusterID }}-prometheus/docker-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: node
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: false
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_node_name]
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}:9323/proxy/metrics
  - target_label: app
    replacement: docker
  - source_labels: [__address__]
    regex: '.*'
    target_label: instance
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
  # Add ip label.
  - target_label: ip
    source_labels: [__meta_kubernetes_node_address_InternalIP]
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  - source_labels: [__meta_kubernetes_node_label_role]
    regex: null
    target_label: role
    replacement: worker
  metric_relabel_configs:
  - source_labels: [__name__]
    regex: (process_virtual_memory_bytes|process_resident_memory_bytes)
    action: keep
# Add scrape configuration for cadvisor
- job_name: {{ .ClusterID }}-prometheus/cadvisor-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: node
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: false
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_node_name]
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}:10250/proxy/metrics/cadvisor
  - target_label: app
    replacement: cadvisor
  - source_labels: [__address__]
    regex: '.*'
    target_label: instance
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
  - source_labels: [__meta_kubernetes_node_address_InternalIP]
    target_label: ip
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  - source_labels: [__meta_kubernetes_node_label_role]
    regex: null
    target_label: role
    replacement: worker
  metric_relabel_configs:
  - source_labels: [namespace]
    regex: (kube-system|giantswarm.*|vault-exporter)
    action: keep
  - source_labels: [__name__]
    regex: container_network_.*
    action: drop
- job_name: {{ .ClusterID }}-prometheus/calico-node-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: false
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (calico-node.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:9091/proxy/metrics
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
    regex: kube-system;calico-node.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
{{ if eq .Provider "aws" }}
- job_name: {{ .ClusterID }}-prometheus/aws-node-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: false
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (aws-node.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:61678/proxy/metrics
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
    regex: kube-system;aws-node.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
{{ end }}
# Add etcd configuration
- job_name: {{ .ClusterID }}-prometheus/etcd-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: node
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
{{ end }}
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .EtcdSecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .EtcdSecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .EtcdSecretName }}/key
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_node_label_role]
    regex: master
    action: keep
  - source_labels: [__address__]
    regex: (.*):10250
    target_label: __address__
    replacement: ${1}:2379
    action: replace
  - target_label: app
    replacement: etcd
  - source_labels: ['__address__']
    target_label:  'instance'
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
  # Add ip label.
  - target_label: ip
    source_labels: [__meta_kubernetes_node_address_InternalIP]
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  - source_labels: [__meta_kubernetes_node_label_role]
    regex: null
    target_label: role
    replacement: worker
# Add kubelet configuration
- job_name: {{ .ClusterID }}-prometheus/kubelet-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: node
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: true
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
  - target_label: app
    replacement: kubelet
  - source_labels: [__address__]
    regex: '.*'
    target_label: instance
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# kube-controller-manager
- job_name: {{ .ClusterID }}-prometheus/kubernetes-controller-manager-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: true
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
{{ if eq .ClusterType "control_plane" }}
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (k8s-controller-manager.*)
    action: keep
{{ else }}
  - source_labels: [__meta_kubernetes_pod_label_k8s_app]
    regex: controller-manager
    action: keep
{{ end }}
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (k8s-controller-manager.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10252/proxy/metrics
  - target_label: app
    replacement: kube-controller-manager
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# kube-scheduler
- job_name: {{ .ClusterID }}-prometheus/kubernetes-scheduler-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: true
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
{{ if eq .ClusterType "control_plane" }}
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (k8s-scheduler.*)
    action: keep
{{ else }}
  - source_labels: [__meta_kubernetes_pod_label_k8s_app]
    regex: scheduler
    action: keep
{{ end }}
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (k8s-scheduler.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10251/proxy/metrics
  - target_label: app
    replacement: kube-scheduler
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# kube-proxy
- job_name: {{ .ClusterID }}-prometheus/kube-proxy-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: true
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-proxy.*)
    action: keep
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-proxy.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10249/proxy/metrics
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: app
    replacement: kube-proxy
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# coredns
- job_name: {{ .ClusterID }}-prometheus/coredns-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  scrape_timeout: 1m
  scrape_interval: 1m
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - kube-system
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: true
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_k8s_app]
    regex: coredns
    action: keep
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (coredns.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:9153/proxy/metrics
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# chart-operator
- job_name: {{ .ClusterID }}-prometheus/chart-operator-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  scrape_timeout: 1m
  scrape_interval: 1m
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: true
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
{{ if eq .ClusterType "control_plane" }}
  - source_labels: [__meta_kubernetes_service_name]
    regex: chart-operator-unique
    action: keep
{{ else }}
  - source_labels: [__meta_kubernetes_service_name]
    regex: chart-operator
    action: keep
{{ end }}
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (chart-operator.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/giantswarm/pods/${1}:8000/proxy/metrics
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# net-exporter
- job_name: {{ .ClusterID }}-prometheus/net-exporter-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  scrape_timeout: 1m
  scrape_interval: 1m
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
{{ if eq .ClusterType "control_plane" }}
      - monitoring
{{ else }}
      - kube-system
{{ end }}
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: true
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: net-exporter
    action: keep
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (net-exporter.*)
    target_label: __metrics_path__
{{ if eq .ClusterType "control_plane" }}
    replacement: /api/v1/namespaces/monitoring/pods/${1}:8000/proxy/metrics
{{ else }}
    replacement: /api/v1/namespaces/kube-system/pods/${1}:8000/proxy/metrics
{{ end }}
  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# cert-exporter
- job_name: {{ .ClusterID }}-prometheus/cert-exporter-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  scrape_timeout: 1m
  scrape_interval: 1m
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
{{ if eq .ClusterType "control_plane" }}
      - monitoring
{{ else }}
      - kube-system
{{ end }}
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: true
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: cert-exporter
    action: keep
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (cert-exporter.*)
    target_label: __metrics_path__
{{ if eq .ClusterType "control_plane" }}
    replacement: /api/v1/namespaces/monitoring/pods/${1}:9005/proxy/metrics
{{ else }}
    replacement: /api/v1/namespaces/kube-system/pods/${1}:9005/proxy/metrics
{{ end }}
  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# node-exporter
- job_name: {{ .ClusterID }}-prometheus/node-exporter-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
{{ if eq .ClusterType "control_plane" }}
      - monitoring
{{ else }}
      - kube-system
{{ end }}
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: true
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: node-exporter
    action: keep
  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# kube-state-metrics 
- job_name: {{ .ClusterID }}-prometheus/kube-state-metrics-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  scrape_timeout: 1m
  scrape_interval: 1m
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
{{ if eq .ClusterType "control_plane" }}
      - monitoring
{{ else }}
      - kube-system
{{ end }}
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: true
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: kube-state-metrics 
    action: keep
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-state-metrics.*)
    target_label: __metrics_path__
{{ if eq .ClusterType "control_plane" }}
    replacement: /api/v1/namespaces/monitoring/pods/${1}:8080/proxy/metrics
{{ else }}
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10301/proxy/metrics
{{ end }}
  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
- job_name: {{ .ClusterID }}-prometheus/managed-app-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: true
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: keep
  - source_labels: [__meta_kubernetes_service_labelpresent_operated_prometheus]
    regex: (true)
    action: drop
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring_port]
    regex: (true)
    action: keep
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring_path]
    regex: (true)
    action: keep
  - regex: (.*)
    target_label: __address__
    replacement: {{ .APIServerURL }}:443
    action: replace
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name, __meta_kubernetes_service_annotation_giantswarm_io_monitoring_port, __meta_kubernetes_service_annotation_giantswarm_io_monitoring_path]
    regex: (.*);(.*);(.*);(.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/${1}/pods/${2}:${3}/proxy/${4}
    action: replace
  - source_labels: [__meta_kubernetes_service_name]
    regex: (.*)
    target_label: app
    action: replace
  - source_labels: [__meta_kubernetes_namespace]
    regex: (.*)
    target_label: namespace
    action: replace
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (.*)
    target_label: pod_name
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_giantswarm_io_monitoring_app_type]
    regex: (optional|default)
    target_label: app_type
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring]
    regex: (true)
    target_label: is_managed_app
    action: replace
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
{{ if eq .ClusterType "control_plane" }}
# app-operator
- job_name: {{ .ClusterID }}-prometheus/app-operator-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
    regex: app-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# cluster-operator
- job_name: {{ .ClusterID }}-prometheus/cluster-operator-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app]
    regex: cluster-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# etcd-backup-operator
- job_name: {{ .ClusterID }}-prometheus/etcd-backup-operator-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    regex: etcd-backup-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# node-operator
- job_name: {{ .ClusterID }}-prometheus/node-operator-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app]
    regex: node-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# release-operator
- job_name: {{ .ClusterID }}-prometheus/release-operator-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app]
    regex: release-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# organization-operator
- job_name: {{ .ClusterID }}-prometheus/organization-operator-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    regex: organization-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# prometheus-meta-operator
- job_name: {{ .ClusterID }}-prometheus/prometheus-meta-operator-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    regex: prometheus-meta-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# rbac-operator
- job_name: {{ .ClusterID }}-prometheus/rbac-operator-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    regex: rbac-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# cert-operator
- job_name: {{ .ClusterID }}-prometheus/cert-operator-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    regex: cert-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# draughtsman
- job_name: {{ .ClusterID }}-prometheus/draughtsman-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - draughtsman
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app]
    regex: draughtsman
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# app-exporter
- job_name: {{ .ClusterID }}-prometheus/app-exporter-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
    regex: app-exporter
    action: keep
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# vault-exporter
- job_name: {{ .ClusterID }}-prometheus/vault-exporter-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: vault-exporter
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: ['__address__']
    target_label:  'instance'
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# alertmanager
- job_name: {{ .ClusterID }}-prometheus/alertmanager-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: alertmanager
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# grafana
- job_name: {{ .ClusterID }}-prometheus/grafana-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: grafana
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# prometheus
- job_name: {{ .ClusterID }}-prometheus/g8s-prometheus-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: prometheus
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# fluentbit
- job_name: {{ .ClusterID }}-prometheus/fluentbit-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: fluentbit 
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# giantswarm-api
- job_name: {{ .ClusterID }}-prometheus/giantswarm-api-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: api
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# tokend
- job_name: {{ .ClusterID }}-prometheus/tokend-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: tokend
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# companyd
- job_name: {{ .ClusterID }}-prometheus/companyd-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: companyd
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep  
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# userd
- job_name: {{ .ClusterID }}-prometheus/userd-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: userd
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# kubernetesd
- job_name: {{ .ClusterID }}-prometheus/kubernetesd-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: kubernetesd
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# credentiald
- job_name: {{ .ClusterID }}-prometheus/credentiald-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: credentiald
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# cluster-service
- job_name: {{ .ClusterID }}-prometheus/cluster-service-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: cluster-service
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
{{ if eq .Provider "aws" }}
# aws-operator
- job_name: {{ .ClusterID }}-prometheus/aws-operator-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: aws-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
{{ end }}
{{ if eq .Provider "azure" }}
# azure-operator
- job_name: {{ .ClusterID }}-prometheus/azure-operator-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: azure-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# azure-collector
- job_name: {{ .ClusterID }}-prometheus/azure-collector-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
    regex: azure-collector
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
{{ end }}
{{ if eq .Provider "kvm" }}
# kvm-operator
- job_name: {{ .ClusterID }}-prometheus/kvm-operator-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: kvm-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# flannel-operator
- job_name: {{ .ClusterID }}-prometheus/flannel-operator-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: flannel-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# bridge-operator
- job_name: {{ .ClusterID }}-prometheus/bridge-operator-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: bridge-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# ingress-exporter
- job_name: {{ .ClusterID }}-prometheus/ingress-exporter-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: ingress-exporter
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
{{ end }}
- job_name: {{ .ClusterID }}-prometheus/vault-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  static_configs:
  - targets:
    - {{ .Vault }}:10300
    labels:
      app: vault
  - targets:
    - {{ .Vault }}:9005
    labels:
      app: cert-exporter
  relabel_configs:
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# gatekeeper
- job_name: {{ .ClusterID }}-prometheus/gatekeeper-{{ .ClusterID }}/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - gatekeeper-system
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (gatekeeper.*)
    action: keep
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/gatekeeper-system/pods/${1}:8888/proxy/metrics
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
# prometheus
- job_name: {{ .ClusterID }}-prometheus/prometheus-{{ .ClusterID }}/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_labelpresent_giantswarm_io_monitoring]
    regex: (true)
    action: keep
  - source_labels: [__meta_kubernetes_service_labelpresent_operated_prometheus]
    regex: (true)
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add installation label.
  - target_label: installation
    replacement: {{ .Installation }}
{{ end }}
