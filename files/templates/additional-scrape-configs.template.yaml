# Additional scrape configuration for the tenant clusters components
# Add scrape configuration for docker
- job_name: {{ .ClusterID }}-prometheus/docker-{{ .ClusterID }}/0
  honor_timestamps: false
  scheme: https
  kubernetes_sd_configs:
  - role: node
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: false
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
{{ if not .IsInCluster }}
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_node_name]
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}:9323/proxy/metrics
{{ end }}
  - target_label: app
    replacement: docker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add ip label.
  - target_label: ip
    source_labels: [__meta_kubernetes_node_address_InternalIP]
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  - source_labels: [__meta_kubernetes_node_label_role]
    regex: null
    target_label: role
    replacement: worker
  metric_relabel_configs:
  - source_labels: [__name__]
    regex: (process_virtual_memory_bytes|process_resident_memory_bytes)
    action: keep
# Add scrape configuration for cadvisor
- job_name: {{ .ClusterID }}-prometheus/cadvisor-{{ .ClusterID }}/0
  honor_timestamps: false
  scheme: https
  kubernetes_sd_configs:
  - role: node
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: false
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
{{ if not .IsInCluster }}
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_node_name]
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}:10250/proxy/metrics/cadvisor
{{ end }}
  - target_label: app
    replacement: cadvisor
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  - source_labels: [__meta_kubernetes_node_address_InternalIP]
    target_label: ip
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  - source_labels: [__meta_kubernetes_node_label_role]
    regex: null
    target_label: role
    replacement: worker
  metric_relabel_configs:
  - source_labels: [namespace]
    regex: (kube-system|giantswarm.*|vault-exporter)
    action: keep
  - source_labels: [__name__]
    regex: container_network_.*
    action: drop
- job_name: {{ .ClusterID }}-prometheus/calico-node-{{ .ClusterID }}/0
  honor_timestamps: false
  scheme: https
  kubernetes_sd_configs:
  - role: pod
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: false
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
{{ if not .IsInCluster }}
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (calico-node.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:9091/proxy/metrics
{{ end }}
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
    regex: kube-system;calico-node.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
{{ if eq .Provider "aws" }}
- job_name: {{ .ClusterID }}-prometheus/aws-node-{{ .ClusterID }}/0
  honor_timestamps: false
  scheme: https
  kubernetes_sd_configs:
  - role: pod
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: false
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
{{ if not .IsInCluster }}
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (aws-node.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:61678/proxy/metrics
{{ end }}
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
    regex: kube-system;aws-node.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
{{ end }}
# Add etcd configuration
- job_name: {{ .ClusterID }}-prometheus/etcd-{{ .ClusterID }}/0
  honor_timestamps: false
  scheme: https
  static_configs:
    - targets:
      - {{ .ETCD }}
{{ if not .IsInCluster }}
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: false
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
  - target_label: app
    replacement: etcd
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
  # Add ip label.
  - target_label: ip
    source_labels: [__meta_kubernetes_node_address_InternalIP]
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  - source_labels: [__meta_kubernetes_node_label_role]
    regex: null
    target_label: role
    replacement: worker
# Add kubelet configuration
- job_name: {{ .ClusterID }}-prometheus/kubelet-{{ .ClusterID }}/0
  honor_timestamps: false
  scheme: https
  kubernetes_sd_configs:
  - role: node
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: true
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
  - target_label: app
    replacement: kubelet
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  # Add provider label.
  - target_label: provider
    replacement: {{ .Provider }}
# kube-controller-manager
- job_name: {{ .ClusterID }}-prometheus/kubernetes-controller-manager-{{ .ClusterID }}/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: true
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
{{ if eq .ClusterType "control_plane" }}
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (k8s-controller-manager.*)
    action: keep
{{ else }}
  - source_labels: [__meta_kubernetes_pod_label_k8s_app]
    regex: controller-manager
    action: keep
{{ end }}
{{ if not .IsInCluster }}
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (k8s-controller-manager.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10252/proxy/metrics
{{ end }}
  - target_label: app
    replacement: kube-controller-manager
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  - target_label: provider
    replacement: {{ .Provider }}
# kube-scheduler
- job_name: {{ .ClusterID }}-prometheus/kubernetes-scheduler-{{ .ClusterID }}/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: true
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
{{ if eq .ClusterType "control_plane" }}
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (k8s-scheduler.*)
    action: keep
{{ else }}
  - source_labels: [__meta_kubernetes_pod_label_k8s_app]
    regex: controller-manager
    action: keep
{{ end }}
{{ if not .IsInCluster }}
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (k8s-scheduler.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10251/proxy/metrics
{{ end }}
  - target_label: app
    replacement: kube-scheduler
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  - target_label: provider
    replacement: {{ .Provider }}
# kube-proxy
- job_name: {{ .ClusterID }}-prometheus/kube-proxy-{{ .ClusterID }}/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: true
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_k8s_app]
    regex: kube-proxy
    action: keep
{{ if not .IsInCluster }}
  - target_label: __address__
    replacement: {{ .APIServerURL }}:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-proxy.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10249/proxy/metrics
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
{{ end }}
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: app
    replacement: kube-proxy
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  - target_label: provider
    replacement: {{ .Provider }}
# chart-operator
- job_name: {{ .ClusterID }}-prometheus/chart-operator-{{ .ClusterID }}/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
{{ if not .IsInCluster }}
    api_server: https://{{ .APIServerURL }}
    tls_config:
      ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
      cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
      key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/{{ .SecretName }}/ca
    cert_file: /etc/prometheus/secrets/{{ .SecretName }}/crt
    key_file: /etc/prometheus/secrets/{{ .SecretName }}/key
    insecure_skip_verify: true
{{ else }}
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
{{ end }}
  relabel_configs:
{{ if eq .ClusterType "control_plane" }}
  - source_labels: [__meta_kubernetes_service_name]
    regex: chart-operator-unique
    action: keep
{{ else }}
  - source_labels: [__meta_kubernetes_service_name]
    regex: chart-operator
    action: keep
{{ end }}
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  - target_label: provider
    replacement: {{ .Provider }}
{{ if eq .ClusterType "control_plane" }}
# cluster-operator
- job_name: {{ .ClusterID }}-prometheus/cluster-operator-{{ .ClusterID }}/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_name]
    regex: cluster-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  - target_label: provider
    replacement: {{ .Provider }}
# etcd-backup-operator
- job_name: {{ .ClusterID }}-prometheus/etcd-backup-operator-{{ .ClusterID }}/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_name]
    regex: etcd-backup-operator-unique
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  - target_label: provider
    replacement: {{ .Provider }}
# node-operator
- job_name: {{ .ClusterID }}-prometheus/node-operator-{{ .ClusterID }}/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_name]
    regex: node-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  - target_label: provider
    replacement: {{ .Provider }}
# release-operator
- job_name: {{ .ClusterID }}-prometheus/release-operator-{{ .ClusterID }}/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_name]
    regex: release-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  - target_label: provider
    replacement: {{ .Provider }}
# organization-operator
- job_name: {{ .ClusterID }}-prometheus/organization-operator-{{ .ClusterID }}/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_name]
    regex: organization-operator-unique
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  - target_label: provider
    replacement: {{ .Provider }}
# prometheus-meta-operator
- job_name: {{ .ClusterID }}-prometheus/prometheus-meta-operator-{{ .ClusterID }}/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_name]
    regex: prometheus-meta-operator-unique
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  - target_label: provider
    replacement: {{ .Provider }}
# rbac-operator
- job_name: {{ .ClusterID }}-prometheus/rbac-operator-{{ .ClusterID }}/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_name]
    regex: rbac-operator-unique
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  - target_label: provider
    replacement: {{ .Provider }}
# draughtsman
- job_name: {{ .ClusterID }}-prometheus/draughtsman-{{ .ClusterID }}/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - draughtsman
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_name]
    regex: draughtsman
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  - target_label: provider
    replacement: {{ .Provider }}
{{ if eq .Provider "aws" }}
# aws-operator
- job_name: {{ .ClusterID }}-prometheus/aws-operator-{{ .ClusterID }}/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: aws-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  - target_label: provider
    replacement: {{ .Provider }}
{{ end }}
{{ if eq .Provider "azure" }}
# azure-operator
- job_name: {{ .ClusterID }}-prometheus/azure-operator-{{ .ClusterID }}/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: azure-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  - target_label: provider
    replacement: {{ .Provider }}
{{ end }}
{{ if eq .Provider "kvm" }}
# kvm-operator
- job_name: {{ .ClusterID }}-prometheus/kvm-operator-{{ .ClusterID }}/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: kvm-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: {{ .ClusterID }}
  - target_label: cluster_type
    replacement: {{ .ClusterType }}
  - target_label: provider
    replacement: {{ .Provider }}
{{ end }}
{{ end }}
