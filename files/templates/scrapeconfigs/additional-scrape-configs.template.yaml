- job_name: [[ .ClusterID ]]-prometheus/kubernetes-apiserver-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
[[ include "_apiserver" . ]]
[[ include "_tlsconfig_skip" . | indent 2 ]]
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_component]
    regex: apiserver
    action: keep
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_endpoint_port_name]
    regex: https
    action: keep
  - target_label: app
    replacement: kubernetes
[[ include "_labelingschema" . | indent 2 ]]
[[ include "_node_role" . | indent 2 ]]
[[ if ne .ClusterType "management_cluster" ]]
[[ if or (eq .Provider "aws") (eq .Provider "azure") ]]
- job_name: [[ .ClusterID ]]-prometheus/cluster-autoscaler-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - kube-system
[[ include "_apiserver" . ]]
[[ include "_tlsconfig" . | indent 2 ]]
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: cluster-autoscaler
    action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
    regex: metrics
    action: keep
  - source_labels: [__meta_kubernetes_pod_ip]
    target_label: instance
    replacement: ${1}:8085
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:8085/proxy/metrics
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_labelingschema" . | indent 2 ]]
[[ include "_node_role" . | indent 2 ]]
[[ end ]]
[[ end ]]
[[- if not .CAPICluster ]]
# Add scrape configuration for docker
- job_name: [[ .ClusterID ]]-prometheus/docker-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: node
[[ include "_apiserver" . ]]
[[ include "_tlsconfig" . | indent 2 ]]
  relabel_configs:
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_node_name]
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}:9323/proxy/metrics
  - target_label: app
    replacement: docker
  - source_labels: [__meta_kubernetes_node_address_InternalIP]
    replacement: ${1}:9323
    target_label: instance
[[ include "_labelingschema" . | indent 2 ]]
[[ include "_node_role" . | indent 2 ]]
  metric_relabel_configs:
  - source_labels: [__name__]
    regex: (engine_daemon_image_actions_seconds_count|process_virtual_memory_bytes|process_resident_memory_bytes)
    action: keep
[[ end ]]
[[- if eq .ClusterType "management_cluster" ]]
# falco-exporter
- job_name: [[ .ClusterID ]]-prometheus/falco-exporter-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
[[ include "_apiserver" . ]]
[[ include "_tlsconfig_skip" . | indent 2 ]]
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
    regex: falco-exporter
    action: keep
  - source_labels: [__meta_kubernetes_endpoints_label_app_kubernetes_io_name]
    target_label: app
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
[[- end ]]
# cadvisor embedded in kubelet - deprecated and to be removed
- job_name: [[ .ClusterID ]]-prometheus/cadvisor-[[ .ClusterID ]]-kubelet/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: node
[[ include "_apiserver" . ]]
[[ include "_tlsconfig" . | indent 2 ]]
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  # by default use node address
  - source_labels: [__address__]
    regex: (.*):10260
    target_label: __address__
    replacement: ${1}:10260
    action: replace
  [[ if eq .ClusterType "management_cluster" ]]
  # if the 'ip' label is present, use the value
  - source_labels: [__meta_kubernetes_node_label_ip]
    regex: (.+)
    target_label: __address__
    replacement: ${1}:2379
    action: replace
  [[- end ]]
  - target_label: app
    replacement: cadvisor
  # Add node name.
  - source_labels: [__meta_kubernetes_node_label_kubernetes_io_hostname]
    target_label: node
[[ include "_labelingschema" . | indent 2 ]]
[[ include "_node_role" . | indent 2 ]]
  metric_relabel_configs:
[[- if eq .ClusterType "management_cluster" ]]
  - source_labels: [namespace]
    regex: (kube-system|giantswarm.*|.*-prometheus|monitoring|draughtsman)
    action: keep
[[- else ]]
  - source_labels: [namespace]
    regex: (kube-system|giantswarm.*|kong.*)
    action: keep
[[- end ]]
# cadvisor standalone deployed as a managed app
- job_name: [[ .ClusterID ]]-prometheus/cadvisor-[[ .ClusterID ]]-daemonset/0
  honor_labels: true
  scheme: https
  scrape_timeout: 30s
  scrape_interval: 60s
  kubernetes_sd_configs:
  - role: pod
[[ include "_apiserver" . ]]
[[ include "_tlsconfig" . | indent 2 ]]
  relabel_configs:
  - source_labels: [__address__]
    replacement: ${1}
    target_label: instance
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (cadvisor.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10260/proxy/metrics
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
    regex: kube-system;cadvisor.*
    action: keep
  - target_label: app
    replacement: cadvisor
  # Add node name.
  - source_labels: [__meta_kubernetes_node_label_kubernetes_io_hostname]
    target_label: node
[[ include "_labelingschema" . | indent 2 ]]
[[ include "_node_role" . | indent 2 ]]
  metric_relabel_configs:
[[- if eq .ClusterType "management_cluster" ]]
  - source_labels: [namespace]
    regex: (kube-system|giantswarm.*|.*-prometheus|monitoring|draughtsman)
    action: keep
[[- else ]]
  - source_labels: [namespace]
    regex: (kube-system|giantswarm.*|kong.*)
    action: keep
[[- end ]]
# calico-node
- job_name: [[ .ClusterID ]]-prometheus/calico-node-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
[[ include "_apiserver" . ]]
[[ include "_tlsconfig" . | indent 2 ]]
  relabel_configs:
  - source_labels: [__address__]
    replacement: ${1}:9091
    target_label: instance
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (calico-node.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:9091/proxy/metrics
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
    regex: kube-system;calico-node.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# aws-node
[[- if eq .Provider "aws" ]]
- job_name: [[ .ClusterID ]]-prometheus/aws-node-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
[[ include "_apiserver" . ]]
[[ include "_tlsconfig" . | indent 2 ]]
  relabel_configs:
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (aws-node.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:61678/proxy/metrics
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
    regex: kube-system;aws-node.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
[[- end ]]
# Add etcd configuration
- job_name: [[ .ClusterID ]]-prometheus/etcd-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  [[ if .CAPICluster ]]
  - role: pod
    namespaces:
      names:
      - kube-system
  [[ else ]]
  - role: node
  [[ end ]]
[[ if ne .ClusterType "management_cluster" ]]
    api_server: https://[[ .APIServerURL ]]
    tls_config:
      ca_file: /etc/prometheus/secrets/[[ .SecretName ]]/ca
      cert_file: /etc/prometheus/secrets/[[ .SecretName ]]/crt
      key_file: /etc/prometheus/secrets/[[ .SecretName ]]/key
      insecure_skip_verify: false
[[ else ]]
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
[[ end ]]
  tls_config:
    ca_file: /etc/prometheus/secrets/[[ .EtcdSecretName ]]/ca
    cert_file: /etc/prometheus/secrets/[[ .EtcdSecretName ]]/crt
    key_file: /etc/prometheus/secrets/[[ .EtcdSecretName ]]/key
    insecure_skip_verify: true
  relabel_configs:
[[- if .CAPICluster ]]
  - source_labels: [__meta_kubernetes_pod_container_name]
    regex: (etcd)
    action: keep
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:2381/proxy/metrics
    action: replace
[[- else ]]
  - source_labels: [__meta_kubernetes_node_label_role]
    regex: master
    action: keep
  # by default use node address
  - source_labels: [__address__]
    regex: (.*):10250
    target_label: __address__
    replacement: ${1}:2379
    action: replace
[[ if eq .ClusterType "management_cluster" ]]
  # if the 'ip' label is present, use the value
  - source_labels: [__meta_kubernetes_node_label_ip]
    regex: (.+)
    target_label: __address__
    replacement: ${1}:2379
    action: replace
[[- end ]]
[[- if and (eq .ClusterType "workload_cluster") (.WorkloadClusterETCDDomain) ]]
  - source_labels: [__address__]
    target_label: __address__
    replacement: [[ .WorkloadClusterETCDDomain ]]
    action: replace
[[- end ]]
[[- end ]]
  - target_label: app
    replacement: etcd
  - source_labels: [__address__]
    target_label: instance
  # Add ip label.
  - target_label: ip
    source_labels: [__meta_kubernetes_node_address_InternalIP]
[[ include "_labelingschema" . | indent 2 ]]
[[ include "_node_role" . | indent 2 ]]
# Add kubelet configuration
- job_name: [[ .ClusterID ]]-prometheus/kubelet-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: node
[[ include "_apiserver" . ]]
[[ include "_tlsconfig_skip" . | indent 2 ]]
  relabel_configs:
  - target_label: app
    replacement: kubelet
  - source_labels: [__address__]
    target_label: instance
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_node_name]
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}:10250/proxy/metrics
[[ include "_labelingschema" . | indent 2 ]]
[[ include "_node_role" . | indent 2 ]]
# kube-controller-manager
- job_name: [[ .ClusterID ]]-prometheus/kubernetes-controller-manager-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system
[[ include "_apiserver" . ]]
[[ include "_tlsconfig_skip" . | indent 2 ]]
  relabel_configs:
  - source_labels: [__address__]
[[- if .CAPICluster ]]
    replacement: $1:10257
[[- else ]]
    replacement: $1:10252
[[- end ]]
    target_label: instance
  - source_labels: [__meta_kubernetes_pod_container_name]
    regex: (k8s-controller-manager|kube-controller-manager)
    action: keep
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: __metrics_path__
[[- if .CAPICluster ]]
    replacement: /api/v1/namespaces/kube-system/pods/https:${1}:10257/proxy/metrics
[[- else ]]
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10252/proxy/metrics
[[- end ]]
  - target_label: app
    replacement: kube-controller-manager
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# kube-scheduler
- job_name: [[ .ClusterID ]]-prometheus/kubernetes-scheduler-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system
[[ include "_apiserver" . ]]
[[ include "_tlsconfig_skip" . | indent 2 ]]
  relabel_configs:
  - source_labels: [__address__]
[[- if .CAPICluster ]]
    replacement: $1:10259
[[- else ]]
    replacement: $1:10251
[[- end ]]
    target_label: instance
  - source_labels: [__meta_kubernetes_pod_container_name]
    regex: (k8s-scheduler|kube-scheduler)
    action: keep
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: __metrics_path__
[[- if .CAPICluster ]]
    replacement: /api/v1/namespaces/kube-system/pods/https:${1}:10259/proxy/metrics
[[- else ]]
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10251/proxy/metrics
[[- end ]]
  - target_label: app
    replacement: kube-scheduler
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# kube-proxy
- job_name: [[ .ClusterID ]]-prometheus/kube-proxy-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system
[[ include "_apiserver" . ]]
[[ include "_tlsconfig_skip" . | indent 2 ]]
  relabel_configs:
  - source_labels: [__address__]
    replacement: $1:10249
    target_label: instance
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-proxy.*)
    action: keep
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-proxy.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10249/proxy/metrics
  - target_label: app
    replacement: kube-proxy
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# coredns
- job_name: [[ .ClusterID ]]-prometheus/coredns-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - kube-system
[[ include "_apiserver" . ]]
[[ include "_tlsconfig_skip" . | indent 2 ]]
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  - source_labels: [__meta_kubernetes_pod_container_name]
    regex: coredns
    action: keep
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (coredns.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:9153/proxy/metrics
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# chart-operator
- job_name: [[ .ClusterID ]]-prometheus/chart-operator-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
[[ include "_apiserver" . ]]
[[ include "_tlsconfig_skip" . | indent 2 ]]
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
[[ if eq .ClusterType "management_cluster" ]]
  - source_labels: [__meta_kubernetes_service_name]
    regex: chart-operator-unique
    action: keep
[[ else ]]
  - source_labels: [__meta_kubernetes_service_name]
    regex: chart-operator
    action: keep
[[ end ]]
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (chart-operator.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/giantswarm/pods/${1}:8000/proxy/metrics
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# net-exporter
- job_name: [[ .ClusterID ]]-prometheus/net-exporter-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
[[ if eq .ClusterType "management_cluster" ]]
      - monitoring
[[ else ]]
      - kube-system
[[ end ]]
[[ include "_apiserver" . ]]
[[ include "_tlsconfig_skip" . | indent 2 ]]
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: net-exporter
    action: keep
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (net-exporter.*)
    target_label: __metrics_path__
[[ if eq .ClusterType "management_cluster" ]]
    replacement: /api/v1/namespaces/monitoring/pods/${1}:8000/proxy/metrics
[[ else ]]
    replacement: /api/v1/namespaces/kube-system/pods/${1}:8000/proxy/metrics
[[ end ]]
  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# cert-exporter
- job_name: [[ .ClusterID ]]-prometheus/cert-exporter-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
[[ if eq .ClusterType "management_cluster" ]]
      - monitoring
[[ else ]]
      - kube-system
[[ end ]]
[[ include "_apiserver" . ]]
[[ include "_tlsconfig_skip" . | indent 2 ]]
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: cert-exporter
    action: keep
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (cert-exporter.*)
    target_label: __metrics_path__
[[ if eq .ClusterType "management_cluster" ]]
    replacement: /api/v1/namespaces/monitoring/pods/${1}:9005/proxy/metrics
[[ else ]]
    replacement: /api/v1/namespaces/kube-system/pods/${1}:9005/proxy/metrics
[[ end ]]
  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# node-exporter
- job_name: [[ .ClusterID ]]-prometheus/node-exporter-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
[[ include "_apiserver" . ]]
[[ include "_tlsconfig_skip" . | indent 2 ]]
  relabel_configs:
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (node-exporter.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/[[ include "_node_exporter_namespace" . ]]/pods/${1}:10300/proxy/metrics
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
    regex: [[ include "_node_exporter_namespace" . ]];node-exporter.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
[[ include "_labelingschema" . | indent 2 ]]
  metric_relabel_configs:
  - source_labels: [mountpoint]
    target_label: pod_id
    regex: /var/lib/kubelet/pods/([a-zA-Z0-9-]+)/.*
    action: replace
    replacement: $1
# kube-state-metrics
- job_name: [[ .ClusterID ]]-prometheus/kube-state-metrics-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
[[ if eq .ClusterType "management_cluster" ]]
      - monitoring
[[ else ]]
      - kube-system
[[ end ]]
[[ include "_apiserver" . ]]
[[ include "_tlsconfig_skip" . | indent 2 ]]
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: kube-state-metrics
    action: keep
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-state-metrics.*)
    target_label: __metrics_path__
[[ if eq .ClusterType "management_cluster" ]]
    replacement: /api/v1/namespaces/monitoring/pods/${1}:10301/proxy/metrics
[[ else ]]
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10301/proxy/metrics
[[ end ]]
  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
[[ if eq .ClusterType "workload_cluster" ]]
  metric_relabel_configs:
  - source_labels: [deployment]
    regex: (.+)
    target_label: workload_type
    replacement: deployment
  - source_labels: [daemonset]
    regex: (.+)
    target_label: workload_type
    replacement: daemonset
  - source_labels: [statefulset]
    regex: (.+)
    target_label: workload_type
    replacement: statefulset
  - source_labels: [deployment]
    regex: (.+)
    target_label: workload_name
    replacement: ${1}
  - source_labels: [daemonset]
    regex: (.+)
    target_label: workload_name
    replacement: ${1}
  - source_labels: [statefulset]
    regex: (.+)
    target_label: workload_name
    replacement: ${1}
[[ end ]]
- job_name: [[ .ClusterID ]]-prometheus/workload-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
[[ include "_apiserver" . ]]
[[ include "_tlsconfig_skip" . | indent 2 ]]
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: keep
    # if __meta_kubernetes_service_annotation_giantswarm_io_monitoring_path is present, we use it as the metrics path
  - source_labels: [__meta_kubernetes_service_annotation_giantswarm_io_monitoring_path]
    action: replace
    target_label: __metrics_path__
    regex: (.+)
    # if __meta_kubernetes_service_annotation_giantswarm_io_monitoring_port, we use it as the metrics port
  - source_labels: [__address__, __meta_kubernetes_service_annotation_giantswarm_io_monitoring_port]
    action: replace
    target_label: __address__
    regex: ([^:]+):(\d+);(\d+)
    replacement: $1:$3
    # if the protocol is empty, we set it to http by default, this allows to override the protocol for services using https like prometheus operator
  - source_labels: [__address__, __meta_kubernetes_service_annotation_giantswarm_io_monitoring_protocol]
    action: replace
    target_label: __meta_kubernetes_service_annotation_giantswarm_io_monitoring_protocol
    regex: (.*);
    replacement: "http"
  - source_labels: [__meta_kubernetes_pod_ip, __address__]
    regex: (.*);([^:]+):(\d+)
    replacement: $1:$3
    target_label: instance
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_annotation_giantswarm_io_monitoring_protocol, __meta_kubernetes_pod_name, __address__, __metrics_path__]
    regex: (.*);(.*);(.*);(.+:)(\d+);(.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/${1}/pods/${2}:${3}:${5}/proxy${6}
    action: replace
  - regex: (.*)
    target_label: __address__
    replacement: [[ .APIServerURL ]]
    action: replace
  - source_labels: [__meta_kubernetes_service_name]
    regex: (.*)
    target_label: app
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_giantswarm_io_monitoring_app_label]
    regex: (.+)
    target_label: app
    action: replace
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
  metric_relabel_configs:
  # drop metrics with the highest cardinality as they increase Prometheus memory usage
  - source_labels: [__name__]
    regex: (nginx_ingress_controller_bytes_sent_bucket|nginx_ingress_controller_request_duration_seconds_bucket|nginx_ingress_controller_request_size_bucket|nginx_ingress_controller_response_duration_seconds_bucket|nginx_ingress_controller_response_size_bucket)
    action: drop
  - source_labels: [app,deployment]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_type
    replacement: deployment
    action: replace
  - source_labels: [app,daemonset]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_type
    replacement: daemonset
    action: replace
  - source_labels: [app,statefulset]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_type
    replacement: statefulset
    action: replace
  - source_labels: [app,deployment]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_name
    replacement: ${1}
    action: replace
  - source_labels: [app,daemonset]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_name
    replacement: ${1}
    action: replace
  - source_labels: [app,statefulset]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_name
    replacement: ${1}
    action: replace
  # Override with label for AWS clusters if exists.
  - source_labels: [app,label_giantswarm_io_machine_deployment]
    regex: kube-state-metrics;(.+)
    target_label: nodepool
    replacement: ${1}
    action: replace
  # Override with label for Azure clusters if exists.
  - source_labels: [app,label_giantswarm_io_machine_pool]
    regex: kube-state-metrics;(.+)
    target_label: nodepool
    replacement: ${1}
    action: replace
  - action: labeldrop
    regex: "label_giantswarm_io_machine_pool|label_giantswarm_io_machine_deployment"
[[ if eq .ClusterType "management_cluster" ]]
# app-operator
- job_name: [[ .ClusterID ]]-prometheus/app-operator-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
    regex: app-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# cluster-operator
- job_name: [[ .ClusterID ]]-prometheus/cluster-operator-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app]
    regex: cluster-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# etcd-backup-operator
- job_name: [[ .ClusterID ]]-prometheus/etcd-backup-operator-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    regex: etcd-backup-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# node-operator
- job_name: [[ .ClusterID ]]-prometheus/node-operator-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app]
    regex: node-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# release-operator
- job_name: [[ .ClusterID ]]-prometheus/release-operator-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app]
    regex: release-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# organization-operator
- job_name: [[ .ClusterID ]]-prometheus/organization-operator-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    regex: organization-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# prometheus-meta-operator
- job_name: [[ .ClusterID ]]-prometheus/prometheus-meta-operator-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    regex: prometheus-meta-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# rbac-operator
- job_name: [[ .ClusterID ]]-prometheus/rbac-operator-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    regex: rbac-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# cert-operator
- job_name: [[ .ClusterID ]]-prometheus/cert-operator-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    regex: cert-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# draughtsman
- job_name: [[ .ClusterID ]]-prometheus/draughtsman-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - draughtsman
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app]
    regex: draughtsman
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# app-exporter
- job_name: [[ .ClusterID ]]-prometheus/app-exporter-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
    regex: app-exporter
    action: keep
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# alertmanager
- job_name: [[ .ClusterID ]]-prometheus/alertmanager-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: alertmanager
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# grafana
- job_name: [[ .ClusterID ]]-prometheus/grafana-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: grafana
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# fluentbit
- job_name: [[ .ClusterID ]]-prometheus/fluentbit-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: fluentbit
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# giantswarm-api
- job_name: [[ .ClusterID ]]-prometheus/giantswarm-api-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: api
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# tokend
- job_name: [[ .ClusterID ]]-prometheus/tokend-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: tokend
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# companyd
- job_name: [[ .ClusterID ]]-prometheus/companyd-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: companyd
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# userd
- job_name: [[ .ClusterID ]]-prometheus/userd-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: userd
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# kubernetesd
- job_name: [[ .ClusterID ]]-prometheus/kubernetesd-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: kubernetesd
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# credentiald
- job_name: [[ .ClusterID ]]-prometheus/credentiald-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: credentiald
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# cluster-service
- job_name: [[ .ClusterID ]]-prometheus/cluster-service-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: cluster-service
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
[[ if .Bastions ]]
# bastion exporters
- job_name: [[ .ClusterID ]]-prometheus/bastions-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  static_configs:
  - targets:
    [[- range $bastion := .Bastions ]]
    - '[[ $bastion]]:10300'
    [[- end ]]
    labels:
      app: node-exporter
      role: bastion
  relabel_configs:
[[ include "_labelingschema" . | indent 2 ]]
[[ end ]]
[[- if .AdditionalScrapeConfigs ]]
# installation-specific configs from config repo
[[ .AdditionalScrapeConfigs ]]
[[- end ]]
[[ if eq .Provider "aws" ]]
# aws-operator
- job_name: [[ .ClusterID ]]-prometheus/aws-operator-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: aws-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
[[ end ]]
[[ if eq .Provider "azure" ]]
# azure-operator
- job_name: [[ .ClusterID ]]-prometheus/azure-operator-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: azure-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# azure-collector
- job_name: [[ .ClusterID ]]-prometheus/azure-collector-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  scrape_timeout: 60s
  scrape_interval: 180s
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
    regex: azure-collector
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
[[ end ]]
[[ if eq .Provider "kvm" ]]
# kvm-operator
- job_name: [[ .ClusterID ]]-prometheus/kvm-operator-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: kvm-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# flannel-operator
- job_name: [[ .ClusterID ]]-prometheus/flannel-operator-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: flannel-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# bridge-operator
- job_name: [[ .ClusterID ]]-prometheus/bridge-operator-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: bridge-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# ingress-exporter
- job_name: [[ .ClusterID ]]-prometheus/ingress-exporter-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: ingress-exporter
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# Mayu
- job_name: [[ .ClusterID ]]-prometheus/mayu-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  static_configs:
  - targets:
    - [[ .Mayu ]]:4080
    labels:
      app: mayu
  relabel_configs:
[[ include "_labelingschema" . | indent 2 ]]
[[ end ]]
- job_name: [[ .ClusterID ]]-prometheus/vault-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  static_configs:
  - targets:
    - [[ .Vault ]]:10300
    labels:
      app: vault
  - targets:
    - [[ .Vault ]]:9005
    labels:
      app: cert-exporter
  relabel_configs:
[[ include "_labelingschema" . | indent 2 ]]
# vault-exporter
- job_name: [[ .ClusterID ]]-prometheus/vault-exporter-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: vault-exporter
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__address__]
    target_label:  instance
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_common" . | indent 2 ]]
[[ include "_labelingschema" . | indent 2 ]]
# nginx-ingress-controller
- job_name: [[ .ClusterID ]]-prometheus/nginx-ingress-controller-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - kube-system
[[ include "_apiserver" . ]]
[[ include "_tlsconfig" . | indent 2 ]]
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring]
    regex: "true"
    action: drop
  - source_labels: [__meta_kubernetes_service_label_k8s_app]
    regex: nginx-ingress-controller.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_ip]
    target_label: instance
    replacement: ${1}:10254
  - target_label: __address__
    replacement: [[ .APIServerURL ]]
  - target_label: app
    replacement: nginx-ingress-controller
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10254/proxy/metrics
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
[[ include "_labelingschema" . | indent 2 ]]
[[ include "_node_role" . | indent 2 ]]
[[ end ]]
# prometheus
- job_name: [[ .ClusterID ]]-prometheus/prometheus-[[ .ClusterID ]]/0
  honor_labels: true
  scheme: http
  metrics_path: /[[ .ClusterID ]]/metrics
  static_configs:
    - targets: ['localhost:9090']
  relabel_configs:
  - replacement: prometheus
    target_label: app
[[ include "_labelingschema" . | indent 2 ]]
