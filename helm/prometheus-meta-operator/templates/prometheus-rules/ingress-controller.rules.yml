apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    {{- include "labels.common" . | nindent 4 }}
  name: ingress-controller.rules
  namespace: '{{ include "resource.default.namespace" . }}'
spec:
  groups:
  - name: ingress-controller
    rules:
    - alert: IngressControllerDeploymentNotSatisfied
      annotations:
        description: '{{`Ingress Controller Deployment {{ $labels.namespace}}/{{ $labels.deployment }} is not satisfied.`}}'
        opsrecipe: ingress-controller-deployment-not-satisfied/
      expr: kube_deployment_status_replicas_available{deployment="nginx-ingress-controller"} / (kube_deployment_status_replicas_available{deployment="nginx-ingress-controller"} + kube_deployment_status_replicas_unavailable{deployment="nginx-ingress-controller"}) * 100 < 51
      for: 10m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        severity: page
        team: batman
        topic: ingress
    - alert: IngressControllerMemoryUsageTooHigh
      annotations:
        description: '{{`Ingress Controller {{ $labels.pod }} memory usage is too high.`}}'
        opsrecipe: ic-memory-too-high/
      expr: sum (container_memory_usage_bytes{pod=~"^nginx.*"}) by (ip, pod, cluster_id) / ignoring (pod) group_left sum (node_memory_MemTotal_bytes) by (ip, cluster_id) * 100 > 33
      for: 3m
      labels:
        area: managedservices
        severity: notify
        team: batman
        topic: ingress
    - alert: IngressControllerReloadIsFailing
      annotations:
        description: '{{`Ingress Controller cannot reload new configuration. Please check IC logs.`}}'
        opsrecipe: ic-failed-to-reload/
      expr: increase(ingress_controller_errors{count="reloads"}[5m]) > 1
      for: 5m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        severity: notify
        team: batman
        topic: ingress
    - alert: IngressControllerReplicaSetNumberTooHigh
      annotations:
        description: '{{`Ingress Controller ReplicaSet in namespace {{ $labels.namespace}} has {{ $value }} pods.`}}'
        opsrecipe: high-number-replicasets/
      expr: count(kube_replicaset_spec_replicas{replicaset=~"nginx-ingress-controller-[a-z0-9]{10}"}) by (cluster_id, namespace) > 15
      for: 2m
      labels:
        area: managedservices
        severity: notify
        team: batman
        topic: ingress
    - alert: IngressControllerSSLCertificateWillExpireSoon
      annotations:
        description: '{{`SSL certificate for {{ $labels.host }} will expire in less than 10 days.`}}'
        opsrecipe: ic-ssl-is-going-to-expire/
      expr: avg(ingress_controller_ssl_expire_time_seconds{cluster_type="management_cluster",control_plane!~"(etcd|api).*"}) without (instance) < (time() + (10 * 24 * 3600))
      for: 5m
      labels:
        area: managedservices
        severity: notify
        team: batman
        topic: ingress
    - alert: IngressControllerServiceHasNoEndpoints
      annotations:
        description: '{{`Ingress Controller has no live endpoints.`}}'
        opsrecipe: ingress-controller-no-live-endpoints.md
      expr: count by (cluster_id) (kube_endpoint_address_available{endpoint="nginx-ingress-controller"}) == 0
      for: 2m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        severity: page
        team: batman
        topic: ingress
