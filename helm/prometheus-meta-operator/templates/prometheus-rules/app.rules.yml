apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    {{- include "labels.common" . | nindent 4 }}
    cluster_type: "management_cluster"
  name: app.rules
  namespace: '{{ include "resource.default.namespace" . }}'
spec:
  groups:
  - name: app
    rules:
    - alert: ManagementClusterAppFailedBatman
      annotations:
        description: '{{`Management Cluster App {{ $labels.name }}, version {{ $labels.version }} is {{if $labels.status }} in {{ $labels.status }} state. {{else}} not installed. {{end}}`}}'
        opsrecipe: app-failed/
      expr: app_operator_app_info{status!~"(?i:(deployed|cordoned))", catalog=~"control-plane-.*",team=~"batman|halo"}
      for: 30m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_outside_working_hours: "true"
        severity: page
        sig: none
        team: batman
        topic: releng
    - alert: ManagementClusterAppFailedAtlas
      annotations:
        description: '{{`Management Cluster App {{ $labels.name }}, version {{ $labels.version }} is {{if $labels.status }} in {{ $labels.status }} state. {{else}} not installed. {{end}}`}}'
        opsrecipe: app-failed/
      expr: app_operator_app_info{status!~"(?i:(deployed|cordoned))", catalog=~"control-plane-.*",team="atlas"}
      for: 30m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_outside_working_hours: "true"
        severity: page
        sig: none
        team: atlas
        topic: releng
    - alert: ManagementClusterAppFailedBiscuit
      annotations:
        description: '{{`Management Cluster App {{ $labels.name }}, version {{ $labels.version }} is {{if $labels.status }} in {{ $labels.status }} state. {{else}} not installed. {{end}}`}}'
        opsrecipe: app-failed/
      expr: app_operator_app_info{status!~"(?i:(deployed|cordoned))", catalog=~"control-plane-.*",team="biscuit"}
      for: 30m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_outside_working_hours: "true"
        severity: page
        sig: none
        team: biscuit
        topic: releng
    - alert: ManagementClusterAppFailedCelestial
      annotations:
        description: '{{`Management Cluster App {{ $labels.name }}, version {{ $labels.version }} is {{if $labels.status }} in {{ $labels.status }} state. {{else}} not installed. {{end}}`}}'
        opsrecipe: app-failed/
      expr: app_operator_app_info{status!~"(?i:(deployed|cordoned))", catalog=~"control-plane-.*",team="celestial"}
      for: 30m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_outside_working_hours: "true"
        severity: page
        sig: none
        team: celestial
        topic: releng
    - alert: ManagementClusterAppFailedFirecracker
      annotations:
        description: '{{`Management Cluster App {{ $labels.name }}, version {{ $labels.version }} is {{if $labels.status }} in {{ $labels.status }} state. {{else}} not installed. {{end}}`}}'
        opsrecipe: app-failed/
      expr: app_operator_app_info{status!~"(?i:(deployed|cordoned))", catalog=~"control-plane-.*",team="firecracker"}
      for: 30m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_outside_working_hours: "true"
        severity: page
        sig: none
        team: firecracker
        topic: releng
    - alert: ManagementClusterAppFailedRocket
      annotations:
        description: '{{`Management Cluster App {{ $labels.name }}, version {{ $labels.version }} is {{if $labels.status }} in {{ $labels.status }} state. {{else}} not installed. {{end}}`}}'
        opsrecipe: app-failed/
      expr: app_operator_app_info{status!~"(?i:(deployed|cordoned))", catalog=~"control-plane-.*",team="rocket"}
      for: 30m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_outside_working_hours: "true"
        severity: page
        sig: none
        team: rocket
        topic: releng
    ## This rule is only available on the management cluster prometheus becasue the source is the app operator
    - alert: WorkloadClusterAppFailed
      annotations:
        description: '{{`Workload Cluster App {{ $labels.name }}, version {{ $labels.version }} is {{if $labels.status }} in {{ $labels.status }} state. {{else}} not installed. {{end}}`}}'
        opsrecipe: app-failed/
      expr: label_replace(app_operator_app_info{status!~"(?i:(deployed|cordoned))", catalog!~"control-plane-.*", name!="cluster-autoscaler"}, "cluster_id", "$1", "namespace", "(([^g]|g[^i]|gi[^a]|gia[^n]|gian[^t]|giant[^s]|giants[^w]|giantsw[^a]|giantswa[^r]|giantswar[^m])*)") == 1
      for: 30m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_outside_working_hours: "true"
        severity: page
        sig: none
        team: batman
        topic: releng
    {{- if eq .Values.Installation.V1.Provider.Kind "aws" }}
    - alert: ClusterAutoscalerAppFailedAWS
      annotations:
        description: '{{`App {{ $labels.name }}, version {{ $labels.version }} is in failed state.`}}'
      expr: label_replace(app_operator_app_info{status="FAILED",name=~"cluster-autoscaler.*"}, "cluster_id", "$1", "namespace", "(([^g]|g[^i]|gi[^a]|gia[^n]|gian[^t]|giant[^s]|giants[^w]|giantsw[^a]|giantswa[^r]|giantswar[^m])*)") == 1
      for: 10m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        severity: notify
        team: batman
        topic: releng
    - alert: ClusterAutoscalerAppNotInstalledAWS
      annotations:
        description: '{{`App {{ $labels.name }} was not installed in {{ $labels.namespace }} namespace.`}}'
      expr: label_replace(app_operator_app_info{status="",name=~"cluster-autoscaler.*"}, "cluster_id", "$1", "namespace", "(([^g]|g[^i]|gi[^a]|gia[^n]|gian[^t]|giant[^s]|giants[^w]|giantsw[^a]|giantswa[^r]|giantswar[^m])*)") == 1
      for: 40m
      labels:
        area: managedservices
        cancel_if_apiserver_down: "true"
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        severity: notify
        team: batman
        topic: releng
    - alert: ClusterAutoscalerAppPendingInstallAWS
      annotations:
        description: '{{`App {{ $labels.name }}, version {{ $labels.version }} is in pending install state.`}}'
      expr: label_replace(app_operator_app_info{status="PENDING_INSTALL",name=~"cluster-autoscaler.*"}, "cluster_id", "$1", "namespace", "(([^g]|g[^i]|gi[^a]|gia[^n]|gian[^t]|giant[^s]|giants[^w]|giantsw[^a]|giantswa[^r]|giantswar[^m])*)") == 1
      for: 30m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        severity: notify
        team: batman
        topic: releng
    - alert: ClusterAutoscalerAppPendingUpgradeAWS
      annotations:
        description: '{{`App {{ $labels.name }}, version {{ $labels.version }} is in pending upgrade state.`}}'
      expr: label_replace(app_operator_app_info{status="PENDING_UPGRADE",name=~"cluster-autoscaler.*"}, "cluster_id", "$1", "namespace", "(([^g]|g[^i]|gi[^a]|gia[^n]|gian[^t]|giant[^s]|giants[^w]|giantsw[^a]|giantswa[^r]|giantswar[^m])*)") == 1
      for: 30m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        severity: notify
        team: batman
        topic: releng
    {{- end }}
    {{- if eq .Values.Installation.V1.Provider.Kind "azure" }}
    - alert: ClusterAutoscalerAppFailedAzure
      annotations:
        description: '{{`App {{ $labels.name }}, version {{ $labels.version }} is in failed state.`}}'
      expr: label_replace(app_operator_app_info{status="FAILED",name=~"cluster-autoscaler.*"}, "cluster_id", "$1", "namespace", "(([^g]|g[^i]|gi[^a]|gia[^n]|gian[^t]|giant[^s]|giants[^w]|giantsw[^a]|giantswa[^r]|giantswar[^m])*)") == 1
      for: 10m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        severity: notify
        team: batman
        topic: releng
    - alert: ClusterAutoscalerAppPendingInstallAzure
      annotations:
        description: '{{`App {{ $labels.name }}, version {{ $labels.version }} is in pending install state.`}}'
      expr: label_replace(app_operator_app_info{status="PENDING_INSTALL",name=~"cluster-autoscaler.*"}, "cluster_id", "$1", "namespace", "(([^g]|g[^i]|gi[^a]|gia[^n]|gian[^t]|giant[^s]|giants[^w]|giantsw[^a]|giantswa[^r]|giantswar[^m])*)") == 1
      for: 30m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        severity: notify
        team: batman
        topic: releng
    - alert: ClusterAutoscalerAppPendingUpgradeAzure
      annotations:
        description: '{{`App {{ $labels.name }}, version {{ $labels.version }} is in pending upgrade state.`}}'
      expr: label_replace(app_operator_app_info{status="PENDING_UPGRADE",name=~"cluster-autoscaler.*"}, "cluster_id", "$1", "namespace", "(([^g]|g[^i]|gi[^a]|gia[^n]|gian[^t]|giant[^s]|giants[^w]|giantsw[^a]|giantswa[^r]|giantswar[^m])*)") == 1
      for: 30m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        severity: notify
        team: batman
        topic: releng
    - alert: ClusterAutoscalerAppNotInstalledAzure
      annotations:
        description: '{{`App {{ $labels.name }} was not installed in {{ $labels.namespace }} namespace.`}}'
      expr: label_replace(app_operator_app_info{status="",name=~"cluster-autoscaler.*"}, "cluster_id", "$1", "namespace", "(([^g]|g[^i]|gi[^a]|gia[^n]|gian[^t]|giant[^s]|giants[^w]|giantsw[^a]|giantswa[^r]|giantswar[^m])*)") == 1
      for: 40m
      labels:
        area: managedservices
        cancel_if_apiserver_down: "true"
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        severity: notify
        team: batman
        topic: releng
    {{- end }}
    - alert: AppWithoutTeamLabel
      annotations:
        description: '{{`App {{ $labels.name }} has no team label.`}}'
        opsrecipe: app-without-team-label/
      expr: label_replace(app_operator_app_info{team=""}, "cluster_id", "$1", "namespace", "(([^g]|g[^i]|gi[^a]|gia[^n]|gian[^t]|giant[^s]|giants[^w]|giantsw[^a]|giantswa[^r]|giantswar[^m])*)") == 1
      for: 40m
      labels:
        area: managedservices
        cancel_if_apiserver_down: "true"
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        severity: notify
        team: batman
        topic: releng
    - alert: CordonedAppExpired
      annotations:
        description: '{{`Cordoned app {{ $labels.name }} in {{ $labels.namespace}} is expired.`}}'
        opsrecipe: expired-cordon-charts/
      expr: (app_operator_app_cordon_expire_time_seconds - time()) < 0
      for: 30m
      labels:
        area: managedservices
        severity: notify
        team: batman
        topic: releng
    - alert: AppOperatorNotReady
      annotations:
        description: '{{`app CR version ({{ $labels.version }}) has no ready app-operator.`}}'
        opsrecipe: app-operator-not-ready/
      expr: app_operator_ready_total != 1
      for: 15m
      labels:
        area: managedservices
        cancel_if_outside_working_hours: "true"
        severity: page
        team: batman
        topic: releng
