apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "prometheus-meta-operator.alertmanager-ownership" . }}
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    # create hook dependencies in the right order
    "helm.sh/hook-weight": "-1"
    {{- include "prometheus-meta-operator.alertmanager-ownership-annotations" . | nindent 4 }}
  labels:
    app.kubernetes.io/component: {{ include "prometheus-meta-operator.alertmanager-ownership" . | quote }}
    {{- include "labels.selector" . | nindent 4 }}
    role: {{ include "prometheus-meta-operator.alertmanager-ownership-selector" . | quote }}
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: {{ include "prometheus-meta-operator.alertmanager-ownership" . | quote }}
        {{- include "labels.selector" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "prometheus-meta-operator.alertmanager-ownership" . }}
      securityContext:
        runAsUser: 2000
        runAsGroup: 2000
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
        - name: kubectl
          image: "{{ .Values.registry.domain }}/giantswarm/docker-kubectl:latest"
          command:
            - sh
            - -c
            - |
              set -o errexit ; set -o xtrace ; set -o nounset
              # piping stderr to stdout means kubectl's errors are surfaced
              # in the pod's logs.
              exec 2>&1
              name=$(kubectl get chart --namespace=giantswarm -l app.kubernetes.io/name=prometheus-meta-operator --output=jsonpath="{.items[0].spec.name}")
              namespace=$(kubectl get chart --namespace=giantswarm -l app.kubernetes.io/name=prometheus-meta-operator --output=jsonpath="{.items[0].spec.namespace}")
              kubectl patch --type=merge --record=false -p '{"metadata":{"annotations":{"meta.helm.sh/release-name": "'"${name}"'","meta.helm.sh/release-namespace": "'"${namespace}"'"},"labels":{"app.kubernetes.io/managed-by": "Helm"}}}' -n "${namespace}" alertmanager alertmanager
              kubectl patch --record=false -n "${namespace}" --type json --patch '[{ "op": "remove", "path": "/spec/alertmanagerConfigSelector/matchLabels/app.kubernetes.io~1managed-by", "value": "prometheus-meta-operator" }]' alertmanager alertmanager
      restartPolicy: Never
  backoffLimit: 4
