apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "labels.common" . | nindent 4 }}
  name: {{ include "resource.default.name" . }}
  namespace: {{ include "resource.default.namespace" . }}
data:
  config.yml: |
    server:
      enable:
        debug:
          server: true
      listen:
        address: 'http://0.0.0.0:8000'
    service:
      kubernetes:
        address: ''
        inCluster: true
        tls:
          caFile: ''
          crtFile: ''
          keyFile: ''
      alertmanager:
        address: {{ .Values.alertmanager.address }}
        baseDomain: {{ .Values.alertmanager.host }}
        logLevel: {{ .Values.alertmanager.logLevel }}
        storage:
          size: {{ .Values.alertmanager.storage.pvcSize }}
      prometheus:
        {{- if .Values.prometheus.additionalScrapeConfigs }}
        additionalScrapeConfigs: |-
          {{- .Values.prometheus.additionalScrapeConfigs | nindent 10 }}
        {{- end }}
        address: {{ .Values.prometheus.address }}
        baseDomain: {{ .Values.prometheus.host }}
        bastions:
        {{- range .Values.prometheus.bastions }}
        - {{ . }}
        {{- end }}
        evaluationInterval: 60s
        logLevel: {{ .Values.prometheus.logLevel }}
        mayu: {{ .Values.prometheus.mayu }}
        remoteWrite:
          url: {{ .Values.grafanaCloud.remoteWriteURL }}
        retention:
          duration: 2w
          size: 90GB
        scrapeInterval: 60s
      slack:
        apiURL: {{ .Values.alertmanager.slack.apiURL }}
        {{- if .Values.slack }}
        {{- if .Values.slack.projectName }}
        projectName: {{.Values.slack.projectName}}
        {{- else }}
        projectName: {{printf "project-%s" .Values.managementCluster.customer }}
        {{- end }}
        {{- else }}
        projectName: {{printf "project-%s" .Values.managementCluster.customer }}
        {{- end }}
      grafana:
        address: {{ .Values.grafana.address }}
      security:
        restrictedAccess:
          enabled: {{ .Values.security.restrictAccess.enabled }}
          subnets: {{ .Values.security.subnet.vpn }}
      ingress:
        externalDNS:
          enabled: {{ .Values.ingress.externalDNS }}
      provider:
        kind: {{ .Values.managementCluster.provider.kind }}
      installation:
        customer: {{ .Values.managementCluster.customer }}
        name: {{ .Values.managementCluster.name }}
        pipeline: {{ .Values.managementCluster.pipeline }}
        {{- if eq .Values.managementCluster.provider.kind "aws" }}
        region: {{ .Values.managementCluster.provider.region }}
        {{- else if eq .Values.managementCluster.provider.kind "azure" }}
        region: {{ .Values.managementCluster.provider.region }}
        {{- else }}
        region: onprem
        {{- end }}
        registry: {{ .Values.registry.domain }}
        insecureCA: {{ .Values.managementCluster.insecureCA }}
      vault:
        host: {{ .Values.vaultHost }}
