data:
  prometheus-additional.yaml: IyBBZGRpdGlvbmFsIHNjcmFwZSBjb25maWd1cmF0aW9uIGZvciB0aGUgdGVuYW50IGNsdXN0ZXJzIGNvbXBvbmVudHMKIyBBZGQgc2NyYXBlIGNvbmZpZ3VyYXRpb24gZm9yIGRvY2tlcgotIGpvYl9uYW1lOiBhbGljZS1wcm9tZXRoZXVzL2RvY2tlci1hbGljZS8wCiAgaG9ub3JfdGltZXN0YW1wczogZmFsc2UKICBzY2hlbWU6IGh0dHBzCiAga3ViZXJuZXRlc19zZF9jb25maWdzOgogIC0gcm9sZTogbm9kZQoKICAgIGFwaV9zZXJ2ZXI6IGh0dHBzOi8vbWFzdGVyLmFsaWNlCiAgICB0bHNfY29uZmlnOgogICAgICBjYV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jYQogICAgICBjZXJ0X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NydAogICAgICBrZXlfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMva2V5CiAgICAgIGluc2VjdXJlX3NraXBfdmVyaWZ5OiBmYWxzZQogIHRsc19jb25maWc6CiAgICBjYV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jYQogICAgY2VydF9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jcnQKICAgIGtleV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9rZXkKICAgIGluc2VjdXJlX3NraXBfdmVyaWZ5OiBmYWxzZQoKICByZWxhYmVsX2NvbmZpZ3M6CiAgLSB0YXJnZXRfbGFiZWw6IF9fYWRkcmVzc19fCiAgICByZXBsYWNlbWVudDogbWFzdGVyLmFsaWNlOjQ0MwogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX25vZGVfbmFtZV0KICAgIHRhcmdldF9sYWJlbDogX19tZXRyaWNzX3BhdGhfXwogICAgcmVwbGFjZW1lbnQ6IC9hcGkvdjEvbm9kZXMvJHsxfTo5MzIzL3Byb3h5L21ldHJpY3MKICAtIHRhcmdldF9sYWJlbDogYXBwCiAgICByZXBsYWNlbWVudDogZG9ja2VyCiAgIyBBZGQgY2x1c3Rlcl9pZCBsYWJlbC4KICAtIHRhcmdldF9sYWJlbDogY2x1c3Rlcl9pZAogICAgcmVwbGFjZW1lbnQ6IGFsaWNlCiAgIyBBZGQgY2x1c3Rlcl90eXBlIGxhYmVsLgogIC0gdGFyZ2V0X2xhYmVsOiBjbHVzdGVyX3R5cGUKICAgIHJlcGxhY2VtZW50OiB0ZW5hbnRfY2x1c3RlcgogICMgQWRkIHByb3ZpZGVyIGxhYmVsLgogIC0gdGFyZ2V0X2xhYmVsOiBwcm92aWRlcgogICAgcmVwbGFjZW1lbnQ6IGF6dXJlCiAgIyBBZGQgaXAgbGFiZWwuCiAgLSB0YXJnZXRfbGFiZWw6IGlwCiAgICBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfbm9kZV9hZGRyZXNzX0ludGVybmFsSVBdCiAgIyBBZGQgcm9sZSBsYWJlbC4KICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19ub2RlX2xhYmVsX3JvbGVdCiAgICB0YXJnZXRfbGFiZWw6IHJvbGUKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19ub2RlX2xhYmVsX3JvbGVdCiAgICByZWdleDogbnVsbAogICAgdGFyZ2V0X2xhYmVsOiByb2xlCiAgICByZXBsYWNlbWVudDogd29ya2VyCiAgbWV0cmljX3JlbGFiZWxfY29uZmlnczoKICAtIHNvdXJjZV9sYWJlbHM6IFtfX25hbWVfX10KICAgIHJlZ2V4OiAocHJvY2Vzc192aXJ0dWFsX21lbW9yeV9ieXRlc3xwcm9jZXNzX3Jlc2lkZW50X21lbW9yeV9ieXRlcykKICAgIGFjdGlvbjoga2VlcAojIEFkZCBzY3JhcGUgY29uZmlndXJhdGlvbiBmb3IgY2Fkdmlzb3IKLSBqb2JfbmFtZTogYWxpY2UtcHJvbWV0aGV1cy9jYWR2aXNvci1hbGljZS8wCiAgaG9ub3JfdGltZXN0YW1wczogZmFsc2UKICBzY2hlbWU6IGh0dHBzCiAga3ViZXJuZXRlc19zZF9jb25maWdzOgogIC0gcm9sZTogbm9kZQoKICAgIGFwaV9zZXJ2ZXI6IGh0dHBzOi8vbWFzdGVyLmFsaWNlCiAgICB0bHNfY29uZmlnOgogICAgICBjYV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jYQogICAgICBjZXJ0X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NydAogICAgICBrZXlfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMva2V5CiAgICAgIGluc2VjdXJlX3NraXBfdmVyaWZ5OiBmYWxzZQogIHRsc19jb25maWc6CiAgICBjYV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jYQogICAgY2VydF9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jcnQKICAgIGtleV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9rZXkKICAgIGluc2VjdXJlX3NraXBfdmVyaWZ5OiBmYWxzZQoKICByZWxhYmVsX2NvbmZpZ3M6CiAgLSB0YXJnZXRfbGFiZWw6IF9fYWRkcmVzc19fCiAgICByZXBsYWNlbWVudDogbWFzdGVyLmFsaWNlOjQ0MwogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX25vZGVfbmFtZV0KICAgIHRhcmdldF9sYWJlbDogX19tZXRyaWNzX3BhdGhfXwogICAgcmVwbGFjZW1lbnQ6IC9hcGkvdjEvbm9kZXMvJHsxfToxMDI1MC9wcm94eS9tZXRyaWNzL2NhZHZpc29yCiAgLSB0YXJnZXRfbGFiZWw6IGFwcAogICAgcmVwbGFjZW1lbnQ6IGNhZHZpc29yCiAgIyBBZGQgY2x1c3Rlcl9pZCBsYWJlbC4KICAtIHRhcmdldF9sYWJlbDogY2x1c3Rlcl9pZAogICAgcmVwbGFjZW1lbnQ6IGFsaWNlCiAgIyBBZGQgY2x1c3Rlcl90eXBlIGxhYmVsLgogIC0gdGFyZ2V0X2xhYmVsOiBjbHVzdGVyX3R5cGUKICAgIHJlcGxhY2VtZW50OiB0ZW5hbnRfY2x1c3RlcgogICMgQWRkIHByb3ZpZGVyIGxhYmVsLgogIC0gdGFyZ2V0X2xhYmVsOiBwcm92aWRlcgogICAgcmVwbGFjZW1lbnQ6IGF6dXJlCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfbm9kZV9hZGRyZXNzX0ludGVybmFsSVBdCiAgICB0YXJnZXRfbGFiZWw6IGlwCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfbm9kZV9sYWJlbF9yb2xlXQogICAgdGFyZ2V0X2xhYmVsOiByb2xlCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfbm9kZV9sYWJlbF9yb2xlXQogICAgcmVnZXg6IG51bGwKICAgIHRhcmdldF9sYWJlbDogcm9sZQogICAgcmVwbGFjZW1lbnQ6IHdvcmtlcgogIG1ldHJpY19yZWxhYmVsX2NvbmZpZ3M6CiAgLSBzb3VyY2VfbGFiZWxzOiBbbmFtZXNwYWNlXQogICAgcmVnZXg6IChrdWJlLXN5c3RlbXxnaWFudHN3YXJtLip8dmF1bHQtZXhwb3J0ZXIpCiAgICBhY3Rpb246IGtlZXAKICAtIHNvdXJjZV9sYWJlbHM6IFtfX25hbWVfX10KICAgIHJlZ2V4OiBjb250YWluZXJfbmV0d29ya18uKgogICAgYWN0aW9uOiBkcm9wCi0gam9iX25hbWU6IGFsaWNlLXByb21ldGhldXMvY2FsaWNvLW5vZGUtYWxpY2UvMAogIGhvbm9yX3RpbWVzdGFtcHM6IGZhbHNlCiAgc2NoZW1lOiBodHRwcwogIGt1YmVybmV0ZXNfc2RfY29uZmlnczoKICAtIHJvbGU6IHBvZAoKICAgIGFwaV9zZXJ2ZXI6IGh0dHBzOi8vbWFzdGVyLmFsaWNlCiAgICB0bHNfY29uZmlnOgogICAgICBjYV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jYQogICAgICBjZXJ0X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NydAogICAgICBrZXlfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMva2V5CiAgICAgIGluc2VjdXJlX3NraXBfdmVyaWZ5OiBmYWxzZQogIHRsc19jb25maWc6CiAgICBjYV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jYQogICAgY2VydF9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jcnQKICAgIGtleV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9rZXkKICAgIGluc2VjdXJlX3NraXBfdmVyaWZ5OiBmYWxzZQoKICByZWxhYmVsX2NvbmZpZ3M6CiAgLSB0YXJnZXRfbGFiZWw6IF9fYWRkcmVzc19fCiAgICByZXBsYWNlbWVudDogbWFzdGVyLmFsaWNlOjQ0MwogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3BvZF9uYW1lXQogICAgcmVnZXg6IChjYWxpY28tbm9kZS4qKQogICAgdGFyZ2V0X2xhYmVsOiBfX21ldHJpY3NfcGF0aF9fCiAgICByZXBsYWNlbWVudDogL2FwaS92MS9uYW1lc3BhY2VzL2t1YmUtc3lzdGVtL3BvZHMvJHsxfTo5MDkxL3Byb3h5L21ldHJpY3MKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19uYW1lc3BhY2UsIF9fbWV0YV9rdWJlcm5ldGVzX3BvZF9uYW1lXQogICAgcmVnZXg6IGt1YmUtc3lzdGVtO2NhbGljby1ub2RlLioKICAgIGFjdGlvbjoga2VlcAogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3BvZF9jb250YWluZXJfbmFtZV0KICAgIHRhcmdldF9sYWJlbDogYXBwCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfbmFtZXNwYWNlXQogICAgdGFyZ2V0X2xhYmVsOiBuYW1lc3BhY2UKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19wb2RfbmFtZV0KICAgIHRhcmdldF9sYWJlbDogcG9kX25hbWUKICAjIEFkZCBjbHVzdGVyX2lkIGxhYmVsLgogIC0gdGFyZ2V0X2xhYmVsOiBjbHVzdGVyX2lkCiAgICByZXBsYWNlbWVudDogYWxpY2UKICAjIEFkZCBjbHVzdGVyX3R5cGUgbGFiZWwuCiAgLSB0YXJnZXRfbGFiZWw6IGNsdXN0ZXJfdHlwZQogICAgcmVwbGFjZW1lbnQ6IHRlbmFudF9jbHVzdGVyCiAgIyBBZGQgcHJvdmlkZXIgbGFiZWwuCiAgLSB0YXJnZXRfbGFiZWw6IHByb3ZpZGVyCiAgICByZXBsYWNlbWVudDogYXp1cmUKCiMgQWRkIGV0Y2QgY29uZmlndXJhdGlvbgotIGpvYl9uYW1lOiBhbGljZS1wcm9tZXRoZXVzL2V0Y2QtYWxpY2UvMAogIGhvbm9yX3RpbWVzdGFtcHM6IGZhbHNlCiAgc2NoZW1lOiBodHRwcwogIGt1YmVybmV0ZXNfc2RfY29uZmlnczoKICAtIHJvbGU6IG5vZGUKCiAgICBhcGlfc2VydmVyOiBodHRwczovL21hc3Rlci5hbGljZQogICAgdGxzX2NvbmZpZzoKICAgICAgY2FfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMvY2EKICAgICAgY2VydF9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jcnQKICAgICAga2V5X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2tleQogICAgICBpbnNlY3VyZV9za2lwX3ZlcmlmeTogZmFsc2UKCiAgdGxzX2NvbmZpZzoKICAgIGNhX2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NhCiAgICBjZXJ0X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NydAogICAga2V5X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2tleQogICAgaW5zZWN1cmVfc2tpcF92ZXJpZnk6IHRydWUKICByZWxhYmVsX2NvbmZpZ3M6CiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfbm9kZV9sYWJlbF9yb2xlXQogICAgcmVnZXg6IG1hc3RlcgogICAgYWN0aW9uOiBrZWVwCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19hZGRyZXNzX19dCiAgICByZWdleDogKC4qKToxMDI1MAogICAgdGFyZ2V0X2xhYmVsOiBfX2FkZHJlc3NfXwogICAgcmVwbGFjZW1lbnQ6ICR7MX06MjM3OQogICAgYWN0aW9uOiByZXBsYWNlCiAgLSB0YXJnZXRfbGFiZWw6IGFwcAogICAgcmVwbGFjZW1lbnQ6IGV0Y2QKICAjIEFkZCBjbHVzdGVyX2lkIGxhYmVsLgogIC0gdGFyZ2V0X2xhYmVsOiBjbHVzdGVyX2lkCiAgICByZXBsYWNlbWVudDogYWxpY2UKICAjIEFkZCBjbHVzdGVyX3R5cGUgbGFiZWwuCiAgLSB0YXJnZXRfbGFiZWw6IGNsdXN0ZXJfdHlwZQogICAgcmVwbGFjZW1lbnQ6IHRlbmFudF9jbHVzdGVyCiAgIyBBZGQgcHJvdmlkZXIgbGFiZWwuCiAgLSB0YXJnZXRfbGFiZWw6IHByb3ZpZGVyCiAgICByZXBsYWNlbWVudDogYXp1cmUKICAjIEFkZCBpcCBsYWJlbC4KICAtIHRhcmdldF9sYWJlbDogaXAKICAgIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19ub2RlX2FkZHJlc3NfSW50ZXJuYWxJUF0KICAjIEFkZCByb2xlIGxhYmVsLgogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX25vZGVfbGFiZWxfcm9sZV0KICAgIHRhcmdldF9sYWJlbDogcm9sZQogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX25vZGVfbGFiZWxfcm9sZV0KICAgIHJlZ2V4OiBudWxsCiAgICB0YXJnZXRfbGFiZWw6IHJvbGUKICAgIHJlcGxhY2VtZW50OiB3b3JrZXIKIyBBZGQga3ViZWxldCBjb25maWd1cmF0aW9uCi0gam9iX25hbWU6IGFsaWNlLXByb21ldGhldXMva3ViZWxldC1hbGljZS8wCiAgaG9ub3JfdGltZXN0YW1wczogZmFsc2UKICBzY2hlbWU6IGh0dHBzCiAga3ViZXJuZXRlc19zZF9jb25maWdzOgogIC0gcm9sZTogbm9kZQoKICAgIGFwaV9zZXJ2ZXI6IGh0dHBzOi8vbWFzdGVyLmFsaWNlCiAgICB0bHNfY29uZmlnOgogICAgICBjYV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jYQogICAgICBjZXJ0X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NydAogICAgICBrZXlfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMva2V5CiAgICAgIGluc2VjdXJlX3NraXBfdmVyaWZ5OiBmYWxzZQogIHRsc19jb25maWc6CiAgICBjYV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jYQogICAgY2VydF9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jcnQKICAgIGtleV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9rZXkKICAgIGluc2VjdXJlX3NraXBfdmVyaWZ5OiB0cnVlCgogIHJlbGFiZWxfY29uZmlnczoKICAtIHRhcmdldF9sYWJlbDogYXBwCiAgICByZXBsYWNlbWVudDoga3ViZWxldAogICMgQWRkIGNsdXN0ZXJfaWQgbGFiZWwuCiAgLSB0YXJnZXRfbGFiZWw6IGNsdXN0ZXJfaWQKICAgIHJlcGxhY2VtZW50OiBhbGljZQogICMgQWRkIGNsdXN0ZXJfdHlwZSBsYWJlbC4KICAtIHRhcmdldF9sYWJlbDogY2x1c3Rlcl90eXBlCiAgICByZXBsYWNlbWVudDogdGVuYW50X2NsdXN0ZXIKICAjIEFkZCBwcm92aWRlciBsYWJlbC4KICAtIHRhcmdldF9sYWJlbDogcHJvdmlkZXIKICAgIHJlcGxhY2VtZW50OiBhenVyZQojIGt1YmUtY29udHJvbGxlci1tYW5hZ2VyCi0gam9iX25hbWU6IGFsaWNlLXByb21ldGhldXMva3ViZXJuZXRlcy1jb250cm9sbGVyLW1hbmFnZXItYWxpY2UvMAogIGhvbm9yX3RpbWVzdGFtcHM6IGZhbHNlCiAgbWV0cmljc19wYXRoOiAvbWV0cmljcwogIHNjaGVtZTogaHR0cHMKICBrdWJlcm5ldGVzX3NkX2NvbmZpZ3M6CiAgLSByb2xlOiBwb2QKICAgIG5hbWVzcGFjZXM6CiAgICAgIG5hbWVzOgogICAgICAtIGt1YmUtc3lzdGVtCgogICAgYXBpX3NlcnZlcjogaHR0cHM6Ly9tYXN0ZXIuYWxpY2UKICAgIHRsc19jb25maWc6CiAgICAgIGNhX2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NhCiAgICAgIGNlcnRfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMvY3J0CiAgICAgIGtleV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9rZXkKICAgICAgaW5zZWN1cmVfc2tpcF92ZXJpZnk6IGZhbHNlCiAgdGxzX2NvbmZpZzoKICAgIGNhX2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NhCiAgICBjZXJ0X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NydAogICAga2V5X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2tleQogICAgaW5zZWN1cmVfc2tpcF92ZXJpZnk6IHRydWUKCiAgcmVsYWJlbF9jb25maWdzOgoKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19wb2RfbGFiZWxfazhzX2FwcF0KICAgIHJlZ2V4OiBjb250cm9sbGVyLW1hbmFnZXIKICAgIGFjdGlvbjoga2VlcAoKICAtIHRhcmdldF9sYWJlbDogX19hZGRyZXNzX18KICAgIHJlcGxhY2VtZW50OiBtYXN0ZXIuYWxpY2U6NDQzCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfcG9kX25hbWVdCiAgICByZWdleDogKGs4cy1jb250cm9sbGVyLW1hbmFnZXIuKikKICAgIHRhcmdldF9sYWJlbDogX19tZXRyaWNzX3BhdGhfXwogICAgcmVwbGFjZW1lbnQ6IC9hcGkvdjEvbmFtZXNwYWNlcy9rdWJlLXN5c3RlbS9wb2RzLyR7MX06MTAyNTIvcHJveHkvbWV0cmljcwogIC0gdGFyZ2V0X2xhYmVsOiBhcHAKICAgIHJlcGxhY2VtZW50OiBrdWJlLWNvbnRyb2xsZXItbWFuYWdlcgogIC0gdGFyZ2V0X2xhYmVsOiBjbHVzdGVyX2lkCiAgICByZXBsYWNlbWVudDogYWxpY2UKICAtIHRhcmdldF9sYWJlbDogY2x1c3Rlcl90eXBlCiAgICByZXBsYWNlbWVudDogdGVuYW50X2NsdXN0ZXIKICAtIHRhcmdldF9sYWJlbDogcHJvdmlkZXIKICAgIHJlcGxhY2VtZW50OiBhenVyZQojIGt1YmUtc2NoZWR1bGVyCi0gam9iX25hbWU6IGFsaWNlLXByb21ldGhldXMva3ViZXJuZXRlcy1zY2hlZHVsZXItYWxpY2UvMAogIGhvbm9yX3RpbWVzdGFtcHM6IGZhbHNlCiAgbWV0cmljc19wYXRoOiAvbWV0cmljcwogIHNjaGVtZTogaHR0cHMKICBrdWJlcm5ldGVzX3NkX2NvbmZpZ3M6CiAgLSByb2xlOiBwb2QKICAgIG5hbWVzcGFjZXM6CiAgICAgIG5hbWVzOgogICAgICAtIGt1YmUtc3lzdGVtCgogICAgYXBpX3NlcnZlcjogaHR0cHM6Ly9tYXN0ZXIuYWxpY2UKICAgIHRsc19jb25maWc6CiAgICAgIGNhX2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NhCiAgICAgIGNlcnRfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMvY3J0CiAgICAgIGtleV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9rZXkKICAgICAgaW5zZWN1cmVfc2tpcF92ZXJpZnk6IGZhbHNlCiAgdGxzX2NvbmZpZzoKICAgIGNhX2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NhCiAgICBjZXJ0X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NydAogICAga2V5X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2tleQogICAgaW5zZWN1cmVfc2tpcF92ZXJpZnk6IHRydWUKCiAgcmVsYWJlbF9jb25maWdzOgoKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19wb2RfbGFiZWxfazhzX2FwcF0KICAgIHJlZ2V4OiBjb250cm9sbGVyLW1hbmFnZXIKICAgIGFjdGlvbjoga2VlcAoKICAtIHRhcmdldF9sYWJlbDogX19hZGRyZXNzX18KICAgIHJlcGxhY2VtZW50OiBtYXN0ZXIuYWxpY2U6NDQzCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfcG9kX25hbWVdCiAgICByZWdleDogKGs4cy1zY2hlZHVsZXIuKikKICAgIHRhcmdldF9sYWJlbDogX19tZXRyaWNzX3BhdGhfXwogICAgcmVwbGFjZW1lbnQ6IC9hcGkvdjEvbmFtZXNwYWNlcy9rdWJlLXN5c3RlbS9wb2RzLyR7MX06MTAyNTEvcHJveHkvbWV0cmljcwogIC0gdGFyZ2V0X2xhYmVsOiBhcHAKICAgIHJlcGxhY2VtZW50OiBrdWJlLXNjaGVkdWxlcgogIC0gdGFyZ2V0X2xhYmVsOiBjbHVzdGVyX2lkCiAgICByZXBsYWNlbWVudDogYWxpY2UKICAtIHRhcmdldF9sYWJlbDogY2x1c3Rlcl90eXBlCiAgICByZXBsYWNlbWVudDogdGVuYW50X2NsdXN0ZXIKICAtIHRhcmdldF9sYWJlbDogcHJvdmlkZXIKICAgIHJlcGxhY2VtZW50OiBhenVyZQojIGt1YmUtcHJveHkKLSBqb2JfbmFtZTogYWxpY2UtcHJvbWV0aGV1cy9rdWJlLXByb3h5LWFsaWNlLzAKICBob25vcl90aW1lc3RhbXBzOiBmYWxzZQogIG1ldHJpY3NfcGF0aDogL21ldHJpY3MKICBzY2hlbWU6IGh0dHBzCiAga3ViZXJuZXRlc19zZF9jb25maWdzOgogIC0gcm9sZTogcG9kCiAgICBuYW1lc3BhY2VzOgogICAgICBuYW1lczoKICAgICAgLSBrdWJlLXN5c3RlbQoKICAgIGFwaV9zZXJ2ZXI6IGh0dHBzOi8vbWFzdGVyLmFsaWNlCiAgICB0bHNfY29uZmlnOgogICAgICBjYV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jYQogICAgICBjZXJ0X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NydAogICAgICBrZXlfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMva2V5CiAgICAgIGluc2VjdXJlX3NraXBfdmVyaWZ5OiBmYWxzZQogIHRsc19jb25maWc6CiAgICBjYV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jYQogICAgY2VydF9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jcnQKICAgIGtleV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9rZXkKICAgIGluc2VjdXJlX3NraXBfdmVyaWZ5OiB0cnVlCgogIHJlbGFiZWxfY29uZmlnczoKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19wb2RfbmFtZV0KICAgIHJlZ2V4OiAoa3ViZS1wcm94eS4qKQogICAgYWN0aW9uOiBrZWVwCiAgLSB0YXJnZXRfbGFiZWw6IF9fYWRkcmVzc19fCiAgICByZXBsYWNlbWVudDogbWFzdGVyLmFsaWNlOjQ0MwogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3BvZF9uYW1lXQogICAgcmVnZXg6IChrdWJlLXByb3h5LiopCiAgICB0YXJnZXRfbGFiZWw6IF9fbWV0cmljc19wYXRoX18KICAgIHJlcGxhY2VtZW50OiAvYXBpL3YxL25hbWVzcGFjZXMva3ViZS1zeXN0ZW0vcG9kcy8kezF9OjEwMjQ5L3Byb3h5L21ldHJpY3MKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19uYW1lc3BhY2VdCiAgICB0YXJnZXRfbGFiZWw6IG5hbWVzcGFjZQogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3BvZF9uYW1lXQogICAgdGFyZ2V0X2xhYmVsOiBwb2RfbmFtZQogIC0gdGFyZ2V0X2xhYmVsOiBhcHAKICAgIHJlcGxhY2VtZW50OiBrdWJlLXByb3h5CiAgLSB0YXJnZXRfbGFiZWw6IGNsdXN0ZXJfaWQKICAgIHJlcGxhY2VtZW50OiBhbGljZQogIC0gdGFyZ2V0X2xhYmVsOiBjbHVzdGVyX3R5cGUKICAgIHJlcGxhY2VtZW50OiB0ZW5hbnRfY2x1c3RlcgogIC0gdGFyZ2V0X2xhYmVsOiBwcm92aWRlcgogICAgcmVwbGFjZW1lbnQ6IGF6dXJlCiMgY2hhcnQtb3BlcmF0b3IKLSBqb2JfbmFtZTogYWxpY2UtcHJvbWV0aGV1cy9jaGFydC1vcGVyYXRvci1hbGljZS8wCiAgaG9ub3JfdGltZXN0YW1wczogZmFsc2UKICBtZXRyaWNzX3BhdGg6IC9tZXRyaWNzCiAgc2NoZW1lOiBodHRwcwogIHNjcmFwZV90aW1lb3V0OiAxbQogIHNjcmFwZV9pbnRlcnZhbDogMW0KICBrdWJlcm5ldGVzX3NkX2NvbmZpZ3M6CiAgLSByb2xlOiBlbmRwb2ludHMKICAgIG5hbWVzcGFjZXM6CiAgICAgIG5hbWVzOgogICAgICAtIGdpYW50c3dhcm0KCiAgICBhcGlfc2VydmVyOiBodHRwczovL21hc3Rlci5hbGljZQogICAgdGxzX2NvbmZpZzoKICAgICAgY2FfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMvY2EKICAgICAgY2VydF9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jcnQKICAgICAga2V5X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2tleQogICAgICBpbnNlY3VyZV9za2lwX3ZlcmlmeTogZmFsc2UKICB0bHNfY29uZmlnOgogICAgY2FfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMvY2EKICAgIGNlcnRfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMvY3J0CiAgICBrZXlfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMva2V5CiAgICBpbnNlY3VyZV9za2lwX3ZlcmlmeTogdHJ1ZQoKICByZWxhYmVsX2NvbmZpZ3M6CgogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfbmFtZV0KICAgIHJlZ2V4OiBjaGFydC1vcGVyYXRvcgogICAgYWN0aW9uOiBrZWVwCgogIC0gdGFyZ2V0X2xhYmVsOiBfX2FkZHJlc3NfXwogICAgcmVwbGFjZW1lbnQ6IG1hc3Rlci5hbGljZTo0NDMKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19wb2RfbmFtZV0KICAgIHJlZ2V4OiAoY2hhcnQtb3BlcmF0b3IuKikKICAgIHRhcmdldF9sYWJlbDogX19tZXRyaWNzX3BhdGhfXwogICAgcmVwbGFjZW1lbnQ6IC9hcGkvdjEvbmFtZXNwYWNlcy9naWFudHN3YXJtL3BvZHMvJHsxfTo4MDAwL3Byb3h5L21ldHJpY3MKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19wb2RfY29udGFpbmVyX25hbWVdCiAgICB0YXJnZXRfbGFiZWw6IGFwcAogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX25hbWVzcGFjZV0KICAgIHRhcmdldF9sYWJlbDogbmFtZXNwYWNlCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfcG9kX25hbWVdCiAgICB0YXJnZXRfbGFiZWw6IHBvZF9uYW1lCiAgLSB0YXJnZXRfbGFiZWw6IGNsdXN0ZXJfaWQKICAgIHJlcGxhY2VtZW50OiBhbGljZQogIC0gdGFyZ2V0X2xhYmVsOiBjbHVzdGVyX3R5cGUKICAgIHJlcGxhY2VtZW50OiB0ZW5hbnRfY2x1c3RlcgogIC0gdGFyZ2V0X2xhYmVsOiBwcm92aWRlcgogICAgcmVwbGFjZW1lbnQ6IGF6dXJlCiMgbmV0LWV4cG9ydGVyCi0gam9iX25hbWU6IGFsaWNlLXByb21ldGhldXMvbmV0LWV4cG9ydGVyLWFsaWNlLzAKICBob25vcl90aW1lc3RhbXBzOiBmYWxzZQogIG1ldHJpY3NfcGF0aDogL21ldHJpY3MKICBzY2hlbWU6IGh0dHBzCiAgc2NyYXBlX3RpbWVvdXQ6IDFtCiAgc2NyYXBlX2ludGVydmFsOiAxbQogIGt1YmVybmV0ZXNfc2RfY29uZmlnczoKICAtIHJvbGU6IGVuZHBvaW50cwogICAgbmFtZXNwYWNlczoKICAgICAgbmFtZXM6CgogICAgICAtIGt1YmUtc3lzdGVtCgoKICAgIGFwaV9zZXJ2ZXI6IGh0dHBzOi8vbWFzdGVyLmFsaWNlCiAgICB0bHNfY29uZmlnOgogICAgICBjYV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jYQogICAgICBjZXJ0X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NydAogICAgICBrZXlfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMva2V5CiAgICAgIGluc2VjdXJlX3NraXBfdmVyaWZ5OiBmYWxzZQogIHRsc19jb25maWc6CiAgICBjYV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jYQogICAgY2VydF9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jcnQKICAgIGtleV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9rZXkKICAgIGluc2VjdXJlX3NraXBfdmVyaWZ5OiB0cnVlCgogIHJlbGFiZWxfY29uZmlnczoKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19zZXJ2aWNlX2xhYmVsX2FwcF0KICAgIHJlZ2V4OiBuZXQtZXhwb3J0ZXIKICAgIGFjdGlvbjoga2VlcAogIC0gdGFyZ2V0X2xhYmVsOiBfX2FkZHJlc3NfXwogICAgcmVwbGFjZW1lbnQ6IG1hc3Rlci5hbGljZTo0NDMKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19wb2RfbmFtZV0KICAgIHJlZ2V4OiAobmV0LWV4cG9ydGVyLiopCiAgICB0YXJnZXRfbGFiZWw6IF9fbWV0cmljc19wYXRoX18KCiAgICByZXBsYWNlbWVudDogL2FwaS92MS9uYW1lc3BhY2VzL2t1YmUtc3lzdGVtL3BvZHMvJHsxfTo4MDAwL3Byb3h5L21ldHJpY3MKCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfc2VydmljZV9sYWJlbF9hcHBdCiAgICB0YXJnZXRfbGFiZWw6IGFwcAogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX25hbWVzcGFjZV0KICAgIHRhcmdldF9sYWJlbDogbmFtZXNwYWNlCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfcG9kX25hbWVdCiAgICB0YXJnZXRfbGFiZWw6IHBvZF9uYW1lCiAgLSB0YXJnZXRfbGFiZWw6IGNsdXN0ZXJfaWQKICAgIHJlcGxhY2VtZW50OiBhbGljZQogIC0gdGFyZ2V0X2xhYmVsOiBjbHVzdGVyX3R5cGUKICAgIHJlcGxhY2VtZW50OiB0ZW5hbnRfY2x1c3RlcgogIC0gdGFyZ2V0X2xhYmVsOiBwcm92aWRlcgogICAgcmVwbGFjZW1lbnQ6IGF6dXJlCiMgY2VydC1leHBvcnRlcgotIGpvYl9uYW1lOiBhbGljZS1wcm9tZXRoZXVzL2NlcnQtZXhwb3J0ZXItYWxpY2UvMAogIGhvbm9yX3RpbWVzdGFtcHM6IGZhbHNlCiAgbWV0cmljc19wYXRoOiAvbWV0cmljcwogIHNjaGVtZTogaHR0cHMKICBzY3JhcGVfdGltZW91dDogMW0KICBzY3JhcGVfaW50ZXJ2YWw6IDFtCiAga3ViZXJuZXRlc19zZF9jb25maWdzOgogIC0gcm9sZTogZW5kcG9pbnRzCiAgICBuYW1lc3BhY2VzOgogICAgICBuYW1lczoKCiAgICAgIC0ga3ViZS1zeXN0ZW0KCgogICAgYXBpX3NlcnZlcjogaHR0cHM6Ly9tYXN0ZXIuYWxpY2UKICAgIHRsc19jb25maWc6CiAgICAgIGNhX2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NhCiAgICAgIGNlcnRfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMvY3J0CiAgICAgIGtleV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9rZXkKICAgICAgaW5zZWN1cmVfc2tpcF92ZXJpZnk6IGZhbHNlCiAgdGxzX2NvbmZpZzoKICAgIGNhX2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NhCiAgICBjZXJ0X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NydAogICAga2V5X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2tleQogICAgaW5zZWN1cmVfc2tpcF92ZXJpZnk6IHRydWUKCiAgcmVsYWJlbF9jb25maWdzOgogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfbGFiZWxfYXBwXQogICAgcmVnZXg6IGNlcnQtZXhwb3J0ZXIKICAgIGFjdGlvbjoga2VlcAogIC0gdGFyZ2V0X2xhYmVsOiBfX2FkZHJlc3NfXwogICAgcmVwbGFjZW1lbnQ6IG1hc3Rlci5hbGljZTo0NDMKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19wb2RfbmFtZV0KICAgIHJlZ2V4OiAoY2VydC1leHBvcnRlci4qKQogICAgdGFyZ2V0X2xhYmVsOiBfX21ldHJpY3NfcGF0aF9fCgogICAgcmVwbGFjZW1lbnQ6IC9hcGkvdjEvbmFtZXNwYWNlcy9rdWJlLXN5c3RlbS9wb2RzLyR7MX06OTAwNS9wcm94eS9tZXRyaWNzCgogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfbGFiZWxfYXBwXQogICAgdGFyZ2V0X2xhYmVsOiBhcHAKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19uYW1lc3BhY2VdCiAgICB0YXJnZXRfbGFiZWw6IG5hbWVzcGFjZQogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3BvZF9uYW1lXQogICAgdGFyZ2V0X2xhYmVsOiBwb2RfbmFtZQogIC0gdGFyZ2V0X2xhYmVsOiBjbHVzdGVyX2lkCiAgICByZXBsYWNlbWVudDogYWxpY2UKICAtIHRhcmdldF9sYWJlbDogY2x1c3Rlcl90eXBlCiAgICByZXBsYWNlbWVudDogdGVuYW50X2NsdXN0ZXIKICAtIHRhcmdldF9sYWJlbDogcHJvdmlkZXIKICAgIHJlcGxhY2VtZW50OiBhenVyZQojIG5vZGUtZXhwb3J0ZXIKLSBqb2JfbmFtZTogYWxpY2UtcHJvbWV0aGV1cy9ub2RlLWV4cG9ydGVyLWFsaWNlLzAKICBob25vcl90aW1lc3RhbXBzOiBmYWxzZQogIG1ldHJpY3NfcGF0aDogL21ldHJpY3MKICBzY2hlbWU6IGh0dHAKICBrdWJlcm5ldGVzX3NkX2NvbmZpZ3M6CiAgLSByb2xlOiBlbmRwb2ludHMKICAgIG5hbWVzcGFjZXM6CiAgICAgIG5hbWVzOgoKICAgICAgLSBrdWJlLXN5c3RlbQoKCiAgICBhcGlfc2VydmVyOiBodHRwczovL21hc3Rlci5hbGljZQogICAgdGxzX2NvbmZpZzoKICAgICAgY2FfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMvY2EKICAgICAgY2VydF9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jcnQKICAgICAga2V5X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2tleQogICAgICBpbnNlY3VyZV9za2lwX3ZlcmlmeTogZmFsc2UKICB0bHNfY29uZmlnOgogICAgY2FfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMvY2EKICAgIGNlcnRfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMvY3J0CiAgICBrZXlfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMva2V5CiAgICBpbnNlY3VyZV9za2lwX3ZlcmlmeTogdHJ1ZQoKICByZWxhYmVsX2NvbmZpZ3M6CiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfc2VydmljZV9sYWJlbF9hcHBdCiAgICByZWdleDogbm9kZS1leHBvcnRlcgogICAgYWN0aW9uOiBrZWVwCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfc2VydmljZV9sYWJlbF9hcHBdCiAgICB0YXJnZXRfbGFiZWw6IGFwcAogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfYW5ub3RhdGlvbl9wcm9tZXRoZXVzX2lvX3BhdGhdCiAgICByZWdleDogKC4rKQogICAgdGFyZ2V0X2xhYmVsOiBfX21ldHJpY3NfcGF0aF9fCiAgICByZXBsYWNlbWVudDogJDEKICAgIGFjdGlvbjogcmVwbGFjZQogIC0gc291cmNlX2xhYmVsczogW19fYWRkcmVzc19fLCBfX21ldGFfa3ViZXJuZXRlc19zZXJ2aWNlX2Fubm90YXRpb25fcHJvbWV0aGV1c19pb19wb3J0XQogICAgcmVnZXg6ICguKykoPzo6XGQrKTsoXGQrKQogICAgdGFyZ2V0X2xhYmVsOiBfX2FkZHJlc3NfXwogICAgcmVwbGFjZW1lbnQ6ICQxOiQyCiAgICBhY3Rpb246IHJlcGxhY2UKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19zZXJ2aWNlX2Fubm90YXRpb25fcHJvbWV0aGV1c19pb19zY2hlbWVdCiAgICByZWdleDogKGh0dHBzPykKICAgIHRhcmdldF9sYWJlbDogX19zY2hlbWVfXwogICAgcmVwbGFjZW1lbnQ6ICQxCiAgICBhY3Rpb246IHJlcGxhY2UKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19uYW1lc3BhY2VdCiAgICB0YXJnZXRfbGFiZWw6IG5hbWVzcGFjZQogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3BvZF9uYW1lXQogICAgdGFyZ2V0X2xhYmVsOiBwb2RfbmFtZQogIC0gdGFyZ2V0X2xhYmVsOiBjbHVzdGVyX2lkCiAgICByZXBsYWNlbWVudDogYWxpY2UKICAtIHRhcmdldF9sYWJlbDogY2x1c3Rlcl90eXBlCiAgICByZXBsYWNlbWVudDogdGVuYW50X2NsdXN0ZXIKICAtIHRhcmdldF9sYWJlbDogcHJvdmlkZXIKICAgIHJlcGxhY2VtZW50OiBhenVyZQojIGt1YmUtc3RhdGUtbWV0cmljcyAKLSBqb2JfbmFtZTogYWxpY2UtcHJvbWV0aGV1cy9rdWJlLXN0YXRlLW1ldHJpY3MtYWxpY2UvMAogIGhvbm9yX3RpbWVzdGFtcHM6IGZhbHNlCiAgbWV0cmljc19wYXRoOiAvbWV0cmljcwogIHNjaGVtZTogaHR0cHMKICBzY3JhcGVfdGltZW91dDogMW0KICBzY3JhcGVfaW50ZXJ2YWw6IDFtCiAga3ViZXJuZXRlc19zZF9jb25maWdzOgogIC0gcm9sZTogZW5kcG9pbnRzCiAgICBuYW1lc3BhY2VzOgogICAgICBuYW1lczoKCiAgICAgIC0ga3ViZS1zeXN0ZW0KCgogICAgYXBpX3NlcnZlcjogaHR0cHM6Ly9tYXN0ZXIuYWxpY2UKICAgIHRsc19jb25maWc6CiAgICAgIGNhX2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NhCiAgICAgIGNlcnRfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMvY3J0CiAgICAgIGtleV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9rZXkKICAgICAgaW5zZWN1cmVfc2tpcF92ZXJpZnk6IGZhbHNlCiAgdGxzX2NvbmZpZzoKICAgIGNhX2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NhCiAgICBjZXJ0X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NydAogICAga2V5X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2tleQogICAgaW5zZWN1cmVfc2tpcF92ZXJpZnk6IHRydWUKCiAgcmVsYWJlbF9jb25maWdzOgogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfbGFiZWxfYXBwXQogICAgcmVnZXg6IGt1YmUtc3RhdGUtbWV0cmljcyAKICAgIGFjdGlvbjoga2VlcAogIC0gdGFyZ2V0X2xhYmVsOiBfX2FkZHJlc3NfXwogICAgcmVwbGFjZW1lbnQ6IG1hc3Rlci5hbGljZTo0NDMKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19wb2RfbmFtZV0KICAgIHJlZ2V4OiAoa3ViZS1zdGF0ZS1tZXRyaWNzLiopCiAgICB0YXJnZXRfbGFiZWw6IF9fbWV0cmljc19wYXRoX18KCiAgICByZXBsYWNlbWVudDogL2FwaS92MS9uYW1lc3BhY2VzL2t1YmUtc3lzdGVtL3BvZHMvJHsxfToxMDMwMS9wcm94eS9tZXRyaWNzCgogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfbGFiZWxfYXBwXQogICAgdGFyZ2V0X2xhYmVsOiBhcHAKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19uYW1lc3BhY2VdCiAgICB0YXJnZXRfbGFiZWw6IG5hbWVzcGFjZQogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3BvZF9uYW1lXQogICAgdGFyZ2V0X2xhYmVsOiBwb2RfbmFtZQogIC0gdGFyZ2V0X2xhYmVsOiBjbHVzdGVyX2lkCiAgICByZXBsYWNlbWVudDogYWxpY2UKICAtIHRhcmdldF9sYWJlbDogY2x1c3Rlcl90eXBlCiAgICByZXBsYWNlbWVudDogdGVuYW50X2NsdXN0ZXIKICAtIHRhcmdldF9sYWJlbDogcHJvdmlkZXIKICAgIHJlcGxhY2VtZW50OiBhenVyZQotIGpvYl9uYW1lOiBhbGljZS1wcm9tZXRoZXVzL21hbmFnZWQtYXBwLWFsaWNlLzAKICBtZXRyaWNzX3BhdGg6IC9tZXRyaWNzCiAgc2NoZW1lOiBodHRwcwogIGt1YmVybmV0ZXNfc2RfY29uZmlnczoKICAtIHJvbGU6IGVuZHBvaW50cwoKICAgIGFwaV9zZXJ2ZXI6IGh0dHBzOi8vbWFzdGVyLmFsaWNlCiAgICB0bHNfY29uZmlnOgogICAgICBjYV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jYQogICAgICBjZXJ0X2ZpbGU6IC9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL2NsdXN0ZXItY2VydGlmaWNhdGVzL2NydAogICAgICBrZXlfZmlsZTogL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvY2x1c3Rlci1jZXJ0aWZpY2F0ZXMva2V5CiAgICAgIGluc2VjdXJlX3NraXBfdmVyaWZ5OiBmYWxzZQogIHRsc19jb25maWc6CiAgICBjYV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jYQogICAgY2VydF9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9jcnQKICAgIGtleV9maWxlOiAvZXRjL3Byb21ldGhldXMvc2VjcmV0cy9jbHVzdGVyLWNlcnRpZmljYXRlcy9rZXkKICAgIGluc2VjdXJlX3NraXBfdmVyaWZ5OiB0cnVlCgogIHJlbGFiZWxfY29uZmlnczoKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19zZXJ2aWNlX2Fubm90YXRpb25wcmVzZW50X2dpYW50c3dhcm1faW9fbW9uaXRvcmluZ10KICAgIHJlZ2V4OiAodHJ1ZSkKICAgIGFjdGlvbjoga2VlcAogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfYW5ub3RhdGlvbl9naWFudHN3YXJtX2lvX21vbml0b3JpbmddCiAgICByZWdleDogKHRydWUpCiAgICBhY3Rpb246IGtlZXAKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19zZXJ2aWNlX2Fubm90YXRpb25wcmVzZW50X2dpYW50c3dhcm1faW9fbW9uaXRvcmluZ19wb3J0XQogICAgcmVnZXg6ICh0cnVlKQogICAgYWN0aW9uOiBrZWVwCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfc2VydmljZV9hbm5vdGF0aW9ucHJlc2VudF9naWFudHN3YXJtX2lvX21vbml0b3JpbmdfcGF0aF0KICAgIHJlZ2V4OiAodHJ1ZSkKICAgIGFjdGlvbjoga2VlcAogIC0gcmVnZXg6ICguKikKICAgIHRhcmdldF9sYWJlbDogX19hZGRyZXNzX18KICAgIHJlcGxhY2VtZW50OiBtYXN0ZXIuYWxpY2U6NDQzCiAgICBhY3Rpb246IHJlcGxhY2UKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19uYW1lc3BhY2UsIF9fbWV0YV9rdWJlcm5ldGVzX3BvZF9uYW1lLCBfX21ldGFfa3ViZXJuZXRlc19zZXJ2aWNlX2Fubm90YXRpb25fZ2lhbnRzd2FybV9pb19tb25pdG9yaW5nX3BvcnQsIF9fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfYW5ub3RhdGlvbl9naWFudHN3YXJtX2lvX21vbml0b3JpbmdfcGF0aF0KICAgIHJlZ2V4OiAoLiopOyguKik7KC4qKTsoLiopCiAgICB0YXJnZXRfbGFiZWw6IF9fbWV0cmljc19wYXRoX18KICAgIHJlcGxhY2VtZW50OiAvYXBpL3YxL25hbWVzcGFjZXMvJHsxfS9wb2RzLyR7Mn06JHszfS9wcm94eS8kezR9CiAgICBhY3Rpb246IHJlcGxhY2UKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19zZXJ2aWNlX25hbWVdCiAgICByZWdleDogKC4qKQogICAgdGFyZ2V0X2xhYmVsOiBhcHAKICAgIGFjdGlvbjogcmVwbGFjZQogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX25hbWVzcGFjZV0KICAgIHJlZ2V4OiAoLiopCiAgICB0YXJnZXRfbGFiZWw6IG5hbWVzcGFjZQogICAgYWN0aW9uOiByZXBsYWNlCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfcG9kX25hbWVdCiAgICByZWdleDogKC4qKQogICAgdGFyZ2V0X2xhYmVsOiBwb2RfbmFtZQogICAgYWN0aW9uOiByZXBsYWNlCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfc2VydmljZV9hbm5vdGF0aW9uX2dpYW50c3dhcm1faW9fbW9uaXRvcmluZ19hcHBfdHlwZV0KICAgIHJlZ2V4OiAob3B0aW9uYWx8ZGVmYXVsdCkKICAgIHRhcmdldF9sYWJlbDogYXBwX3R5cGUKICAgIGFjdGlvbjogcmVwbGFjZQogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfYW5ub3RhdGlvbnByZXNlbnRfZ2lhbnRzd2FybV9pb19tb25pdG9yaW5nXQogICAgcmVnZXg6ICh0cnVlKQogICAgdGFyZ2V0X2xhYmVsOiBpc19tYW5hZ2VkX2FwcAogICAgYWN0aW9uOiByZXBsYWNlCiAgLSB0YXJnZXRfbGFiZWw6IGNsdXN0ZXJfaWQKICAgIHJlcGxhY2VtZW50OiBhbGljZQogIC0gdGFyZ2V0X2xhYmVsOiBjbHVzdGVyX3R5cGUKICAgIHJlcGxhY2VtZW50OiB0ZW5hbnRfY2x1c3RlcgogIC0gdGFyZ2V0X2xhYmVsOiBwcm92aWRlcgogICAgcmVwbGFjZW1lbnQ6IGF6dXJlCgo=
metadata:
  creationTimestamp: null
  name: additional-scrape-configs
  namespace: alice-prometheus
type: Opaque
