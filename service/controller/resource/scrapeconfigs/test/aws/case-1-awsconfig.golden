data:
  prometheus-additional.yaml: # Additional scrape configuration for the tenant clusters components
# Add scrape configuration for docker
- job_name: alice-prometheus/docker-alice/0
  honor_timestamps: false
  scheme: https
  kubernetes_sd_configs:
  - role: node

    api_server: https://master.alice
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: false

  relabel_configs:
  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_node_name]
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}:9323/proxy/metrics
  - target_label: app
    replacement: docker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: alice
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: tenant_cluster
  # Add provider label.
  - target_label: provider
    replacement: aws
  # Add ip label.
  - target_label: ip
    source_labels: [__meta_kubernetes_node_address_InternalIP]
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  - source_labels: [__meta_kubernetes_node_label_role]
    regex: null
    target_label: role
    replacement: worker
  metric_relabel_configs:
  - source_labels: [__name__]
    regex: (process_virtual_memory_bytes|process_resident_memory_bytes)
    action: keep
# Add scrape configuration for cadvisor
- job_name: alice-prometheus/cadvisor-alice/0
  honor_timestamps: false
  scheme: https
  kubernetes_sd_configs:
  - role: node

    api_server: https://master.alice
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: false

  relabel_configs:
  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_node_name]
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}:10250/proxy/metrics/cadvisor
  - target_label: app
    replacement: cadvisor
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: alice
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: tenant_cluster
  # Add provider label.
  - target_label: provider
    replacement: aws
  - source_labels: [__meta_kubernetes_node_address_InternalIP]
    target_label: ip
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  - source_labels: [__meta_kubernetes_node_label_role]
    regex: null
    target_label: role
    replacement: worker
  metric_relabel_configs:
  - source_labels: [namespace]
    regex: (kube-system|giantswarm.*|vault-exporter)
    action: keep
  - source_labels: [__name__]
    regex: container_network_.*
    action: drop
- job_name: alice-prometheus/calico-node-alice/0
  honor_timestamps: false
  scheme: https
  kubernetes_sd_configs:
  - role: pod

    api_server: https://master.alice
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: false

  relabel_configs:
  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (calico-node.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:9091/proxy/metrics
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
    regex: kube-system;calico-node.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: alice
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: tenant_cluster
  # Add provider label.
  - target_label: provider
    replacement: aws

- job_name: alice-prometheus/aws-node-alice/0
  honor_timestamps: false
  scheme: https
  kubernetes_sd_configs:
  - role: pod

    api_server: https://master.alice
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: false

  relabel_configs:
  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (aws-node.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:61678/proxy/metrics
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
    regex: kube-system;aws-node.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: alice
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: tenant_cluster
  # Add provider label.
  - target_label: provider
    replacement: aws

# Add etcd configuration
- job_name: alice-prometheus/etcd-alice/0
  honor_timestamps: false
  scheme: https
  kubernetes_sd_configs:
  - role: node

    api_server: https://master.alice
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false

  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_node_label_role]
    regex: master
    action: keep
  - source_labels: [__address__]
    regex: (.*):10250
    target_label: __address__
    replacement: ${1}:2379
    action: replace
  - target_label: app
    replacement: etcd
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: alice
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: tenant_cluster
  # Add provider label.
  - target_label: provider
    replacement: aws
  # Add ip label.
  - target_label: ip
    source_labels: [__meta_kubernetes_node_address_InternalIP]
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  - source_labels: [__meta_kubernetes_node_label_role]
    regex: null
    target_label: role
    replacement: worker
# Add kubelet configuration
- job_name: alice-prometheus/kubelet-alice/0
  honor_timestamps: false
  scheme: https
  kubernetes_sd_configs:
  - role: node

    api_server: https://master.alice
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true

  relabel_configs:
  - target_label: app
    replacement: kubelet
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: alice
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: tenant_cluster
  # Add provider label.
  - target_label: provider
    replacement: aws
# kube-controller-manager
- job_name: alice-prometheus/kubernetes-controller-manager-alice/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system

    api_server: https://master.alice
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true

  relabel_configs:

  - source_labels: [__meta_kubernetes_pod_label_k8s_app]
    regex: controller-manager
    action: keep

  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (k8s-controller-manager.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10252/proxy/metrics
  - target_label: app
    replacement: kube-controller-manager
  - target_label: cluster_id
    replacement: alice
  - target_label: cluster_type
    replacement: tenant_cluster
  - target_label: provider
    replacement: aws
# kube-scheduler
- job_name: alice-prometheus/kubernetes-scheduler-alice/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system

    api_server: https://master.alice
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true

  relabel_configs:

  - source_labels: [__meta_kubernetes_pod_label_k8s_app]
    regex: controller-manager
    action: keep

  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (k8s-scheduler.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10251/proxy/metrics
  - target_label: app
    replacement: kube-scheduler
  - target_label: cluster_id
    replacement: alice
  - target_label: cluster_type
    replacement: tenant_cluster
  - target_label: provider
    replacement: aws
# kube-proxy
- job_name: alice-prometheus/kube-proxy-alice/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system

    api_server: https://master.alice
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true

  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-proxy.*)
    action: keep
  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-proxy.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10249/proxy/metrics
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: app
    replacement: kube-proxy
  - target_label: cluster_id
    replacement: alice
  - target_label: cluster_type
    replacement: tenant_cluster
  - target_label: provider
    replacement: aws
# chart-operator
- job_name: alice-prometheus/chart-operator-alice/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: https
  scrape_timeout: 1m
  scrape_interval: 1m
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm

    api_server: https://master.alice
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true

  relabel_configs:

  - source_labels: [__meta_kubernetes_service_name]
    regex: chart-operator
    action: keep

  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (chart-operator.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/giantswarm/pods/${1}:8000/proxy/metrics
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: alice
  - target_label: cluster_type
    replacement: tenant_cluster
  - target_label: provider
    replacement: aws
# net-exporter
- job_name: alice-prometheus/net-exporter-alice/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: https
  scrape_timeout: 1m
  scrape_interval: 1m
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:

      - kube-system


    api_server: https://master.alice
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true

  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: net-exporter
    action: keep
  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (net-exporter.*)
    target_label: __metrics_path__

    replacement: /api/v1/namespaces/kube-system/pods/${1}:8000/proxy/metrics

  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: alice
  - target_label: cluster_type
    replacement: tenant_cluster
  - target_label: provider
    replacement: aws
# cert-exporter
- job_name: alice-prometheus/cert-exporter-alice/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: https
  scrape_timeout: 1m
  scrape_interval: 1m
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:

      - kube-system


    api_server: https://master.alice
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true

  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: cert-exporter
    action: keep
  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (cert-exporter.*)
    target_label: __metrics_path__

    replacement: /api/v1/namespaces/kube-system/pods/${1}:9005/proxy/metrics

  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: alice
  - target_label: cluster_type
    replacement: tenant_cluster
  - target_label: provider
    replacement: aws
# node-exporter
- job_name: alice-prometheus/node-exporter-alice/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:

      - kube-system


    api_server: https://master.alice
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true

  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: node-exporter
    action: keep
  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: alice
  - target_label: cluster_type
    replacement: tenant_cluster
  - target_label: provider
    replacement: aws
# kube-state-metrics 
- job_name: alice-prometheus/kube-state-metrics-alice/0
  honor_timestamps: false
  metrics_path: /metrics
  scheme: https
  scrape_timeout: 1m
  scrape_interval: 1m
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:

      - kube-system


    api_server: https://master.alice
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true

  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: kube-state-metrics 
    action: keep
  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-state-metrics.*)
    target_label: __metrics_path__

    replacement: /api/v1/namespaces/kube-system/pods/${1}:10301/proxy/metrics

  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod_name
  - target_label: cluster_id
    replacement: alice
  - target_label: cluster_type
    replacement: tenant_cluster
  - target_label: provider
    replacement: aws
- job_name: alice-prometheus/managed-app-alice/0
  metrics_path: /metrics
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints

    api_server: https://master.alice
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true

  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring]
    regex: (true)
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_giantswarm_io_monitoring]
    regex: (true)
    action: keep
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring_port]
    regex: (true)
    action: keep
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring_path]
    regex: (true)
    action: keep
  - regex: (.*)
    target_label: __address__
    replacement: master.alice:443
    action: replace
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name, __meta_kubernetes_service_annotation_giantswarm_io_monitoring_port, __meta_kubernetes_service_annotation_giantswarm_io_monitoring_path]
    regex: (.*);(.*);(.*);(.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/${1}/pods/${2}:${3}/proxy/${4}
    action: replace
  - source_labels: [__meta_kubernetes_service_name]
    regex: (.*)
    target_label: app
    action: replace
  - source_labels: [__meta_kubernetes_namespace]
    regex: (.*)
    target_label: namespace
    action: replace
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (.*)
    target_label: pod_name
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_giantswarm_io_monitoring_app_type]
    regex: (optional|default)
    target_label: app_type
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring]
    regex: (true)
    target_label: is_managed_app
    action: replace
  - target_label: cluster_id
    replacement: alice
  - target_label: cluster_type
    replacement: tenant_cluster
  - target_label: provider
    replacement: aws


metadata:
  creationTimestamp: null
  name: additional-scrape-configs
  namespace: alice-prometheus
type: Opaque
