global:
  resolve_timeout: 5m
  slack_api_url: https://slack

templates:
- '/etc/alertmanager/config/*.tmpl'

route:
  group_by: [alertname, cluster_id, installation, status, team]
  group_interval: 15m
  group_wait: 5m
  repeat_interval: 4h
  receiver: root

  routes:
  - receiver: heartbeat
    matchers:
    - alertname="Heartbeat"
    # TODO(@team-atlas): This label is needed for now because we support legacy and new heartbeat alerts. Lets remove it when we remove https://github.com/giantswarm/prometheus-rules/pull/1094/files#diff-2cc8f3328e242b6c86769bfb52b286c7146e074dd244ebb76a0025c838f33d0fR21
    - type="mimir-heartbeat"
    continue: true
    group_wait: 30s
    group_interval: 30s
    repeat_interval: 15m

  # Falco noise Slack
  - receiver: falco_noise_slack
    matchers:
    - alertname=~"Falco.*"
    continue: false

  - receiver: team_tinkerers_slack
    repeat_interval: 14d
    matchers:
    - severity=~"page|notify"
    - team="tinkerers"
    continue: false

  # Team Ops Opsgenie
  - receiver: opsgenie_router
    matchers:
    - severity="page"
    continue: true

  # Team Atlas Slack
  - receiver: team_atlas_slack
    matchers:
    - severity=~"page|notify"
    - team="atlas"
    - type!="heartbeat"
    - alertname!~"Inhibition.*"
    - alertname!="Heartbeat"
    continue: false

  # Team Celestial Slack
  - receiver: team_phoenix_slack
    matchers:
    - severity=~"page|notify"
    - team="celestial"
    - sloth_severity=~"page|ticket"
    continue: false

  # Team Firecracker Slack
  - receiver: team_phoenix_slack
    matchers:
    - severity=~"page|notify"
    - team="firecracker"
    - sloth_severity=~"page|ticket"
    continue: false

  # Team Phoenix Slack
  - receiver: team_phoenix_slack
    matchers:
    - team="phoenix"
    - sloth_severity="page"
    - silence="true"
    continue: false

  # Team Shield Slack
  - receiver: team_shield_slack
    matchers:
    - severity=~"page|notify"
    - team="shield"
    continue: false

  # Team BigMac Slack
  - receiver: team_bigmac_slack
    matchers:
    - severity=~"page|notify"
    - team="bigmac"
    continue: false

  # Team Clippy Slack
  # ReRoute to `phoenix` until we change all team ownership labels
  - receiver: team_phoenix_slack
    matchers:
    - severity=~"page|notify"
    - team="clippy"
    continue: false

  # Team Rocket Slack
  - receiver: team_rocket_slack
    matchers:
    - severity=~"page|notify"
    - team="rocket"
    continue: false

  # Team Ops Slack
  - receiver: team_ops_slack
    matchers:
    - severity=~"page|notify"
    continue: true

  # Team Turtles Slack
  - receiver: team_turtles_slack
    matchers:
    - severity=~"page|notify"
    - team="turtles"
    continue: false

  # Team Honeybadger Slack
  - receiver: team_honeybadger_slack
    matchers:
    - severity=~"page|notify"
    - team="honeybadger"
    continue: false

receivers:
- name: root
- name: heartbeat
  webhook_configs:
  - send_resolved: false
    http_config:
      authorization:
        type: GenieKey
        credentials: opsgenie-key
      follow_redirects: true
      enable_http2: true
    url: https://api.opsgenie.com/v2/heartbeats/test-installation/ping

- name: falco_noise_slack
  slack_configs:
  - channel: '#noise-falco'
    send_resolved: true
    actions:
    - type: button
      text: ':green_book: OpsRecipe'
      url: '{{ template "__runbookurl" . }}'
      style: '{{ if eq .Status "firing" }}primary{{ else }}default{{ end }}'
    - type: button
      text: ':coffin: Linked PMs'
      url: '{{ template "__alert_linked_postmortems" . }}'
    - type: button
      text: ':mag: Query'
      url: '{{ template "__prometheusurl" . }}'
    - type: button
      text: ':grafana: Dashboard'
      url: '{{ template "__dashboardurl" . }}'
    - type: button
      text: ':no_bell: Silence'
      url: '{{ template "__alert_silence_link" .}}'
      style: '{{ if eq .Status "firing" }}danger{{ else }}default{{ end }}'

- name: team_atlas_slack
  slack_configs:
  - channel: '#alert-atlas-test'
    send_resolved: true
    actions:
    - type: button
      text: ':green_book: OpsRecipe'
      url: '{{ template "__runbookurl" . }}'
      style: '{{ if eq .Status "firing" }}primary{{ else }}default{{ end }}'
    - type: button
      text: ':coffin: Linked PMs'
      url: '{{ template "__alert_linked_postmortems" . }}'
    - type: button
      text: ':mag: Query'
      url: '{{ template "__prometheusurl" . }}'
    - type: button
      text: ':grafana: Dashboard'
      url: '{{ template "__dashboardurl" . }}'
    - type: button
      text: ':no_bell: Silence'
      url: '{{ template "__alert_silence_link" .}}'
      style: '{{ if eq .Status "firing" }}danger{{ else }}default{{ end }}'

- name: team_phoenix_slack
  slack_configs:
  - channel: '#alert-phoenix-test'
    send_resolved: true
    actions:
    - type: button
      text: ':green_book: OpsRecipe'
      url: '{{ template "__runbookurl" . }}'
      style: '{{ if eq .Status "firing" }}primary{{ else }}default{{ end }}'
    - type: button
      text: ':coffin: Linked PMs'
      url: '{{ template "__alert_linked_postmortems" . }}'
    - type: button
      text: ':mag: Query'
      url: '{{ template "__prometheusurl" . }}'
    - type: button
      text: ':grafana: Dashboard'
      url: '{{ template "__dashboardurl" . }}'
    - type: button
      text: ':no_bell: Silence'
      url: '{{ template "__alert_silence_link" . }}'
      style: '{{ if eq .Status "firing" }}danger{{ else }}default{{ end }}'

- name: team_bigmac_slack
  slack_configs:
  - channel: '#alert-bigmac-test'
    send_resolved: true
    actions:
    - type: button
      text: ':green_book: OpsRecipe'
      url: '{{ template "__runbookurl" . }}'
      style: '{{ if eq .Status "firing" }}primary{{ else }}default{{ end }}'
    - type: button
      text: ':coffin: Linked PMs'
      url: '{{ template "__alert_linked_postmortems" . }}'
    - type: button
      text: ':mag: Query'
      url: '{{ template "__prometheusurl" . }}'
    - type: button
      text: ':grafana: Dashboard'
      url: '{{ template "__dashboardurl" . }}'
    - type: button
      text: ':no_bell: Silence'
      url: '{{ template "__alert_silence_link" . }}'
      style: '{{ if eq .Status "firing" }}danger{{ else }}default{{ end }}'

- name: team_rocket_slack
  slack_configs:
  - channel: '#alert-rocket-test'
    send_resolved: true
    actions:
    - type: button
      text: ':green_book: OpsRecipe'
      url: '{{ template "__runbookurl" . }}'
      style: '{{ if eq .Status "firing" }}primary{{ else }}default{{ end }}'
    - type: button
      text: ':coffin: Linked PMs'
      url: '{{ template "__alert_linked_postmortems" . }}'
    - type: button
      text: ':mag: Query'
      url: '{{ template "__prometheusurl" . }}'
    - type: button
      text: ':grafana: Dashboard'
      url: '{{ template "__dashboardurl" . }}'
    - type: button
      text: ':no_bell: Silence'
      url: '{{ template "__alert_silence_link" . }}'
      style: '{{ if eq .Status "firing" }}danger{{ else }}default{{ end }}'

- name: team_shield_slack
  slack_configs:
  - channel: '#alert-shield'
    send_resolved: true
    actions:
    - type: button
      text: ':green_book: OpsRecipe'
      url: '{{ template "__runbookurl" . }}'
      style: '{{ if eq .Status "firing" }}primary{{ else }}default{{ end }}'
    - type: button
      text: ':coffin: Linked PMs'
      url: '{{ template "__alert_linked_postmortems" . }}'
    - type: button
      text: ':mag: Query'
      url: '{{ template "__prometheusurl" . }}'
    - type: button
      text: ':grafana: Dashboard'
      url: '{{ template "__dashboardurl" . }}'
    - type: button
      text: ':no_bell: Silence'
      url: '{{ template "__alert_silence_link" .}}'
      style: '{{ if eq .Status "firing" }}danger{{ else }}default{{ end }}'

- name: team_turtles_slack
  slack_configs:
  - channel: '#alert-turtles-test'
    send_resolved: true
    actions:
    - type: button
      text: ':green_book: OpsRecipe'
      url: '{{ template "__runbookurl" . }}'
      style: '{{ if eq .Status "firing" }}primary{{ else }}default{{ end }}'
    - type: button
      text: ':coffin: Linked PMs'
      url: '{{ template "__alert_linked_postmortems" . }}'
    - type: button
      text: ':mag: Query'
      url: '{{ template "__prometheusurl" . }}'
    - type: button
      text: ':grafana: Dashboard'
      url: '{{ template "__dashboardurl" . }}'
    - type: button
      text: ':no_bell: Silence'
      url: '{{ template "__alert_silence_link" . }}'
      style: '{{ if eq .Status "firing" }}danger{{ else }}default{{ end }}'

- name: team_tinkerers_slack
  slack_configs:
  - channel: '#alert-tinkerers'
    send_resolved: true
    actions:
    - type: button
      text: ':green_book: OpsRecipe'
      url: '{{ template "__runbookurl" . }}'
      style: '{{ if eq .Status "firing" }}primary{{ else }}default{{ end }}'
    - type: button
      text: ':coffin: Linked PMs'
      url: '{{ template "__alert_linked_postmortems" . }}'
    - type: button
      text: ':mag: Query'
      url: '{{ template "__prometheusurl" . }}'
    - type: button
      text: ':grafana: Dashboard'
      url: '{{ template "__dashboardurl" . }}'
    - type: button
      text: ':no_bell: Silence'
      url: '{{ template "__alert_silence_link" .}}'
      style: '{{ if eq .Status "firing" }}danger{{ else }}default{{ end }}'

- name: team_honeybadger_slack
  slack_configs:
  - channel: '#alert-honeybadger'
    send_resolved: true
    actions:
    - type: button
      text: ':green_book: OpsRecipe'
      url: '{{ template "__runbookurl" . }}'
      style: '{{ if eq .Status "firing" }}primary{{ else }}default{{ end }}'
    - type: button
      text: ':coffin: Linked PMs'
      url: '{{ template "__alert_linked_postmortems" . }}'
    - type: button
      text: ':mag: Query'
      url: '{{ template "__prometheusurl" . }}'
    - type: button
      text: ':grafana: Dashboard'
      url: '{{ template "__dashboardurl" . }}'
    - type: button
      text: ':no_bell: Silence'
      url: '{{ template "__alert_silence_link" .}}'
      style: '{{ if eq .Status "firing" }}danger{{ else }}default{{ end }}'

- name: opsgenie_router
  opsgenie_configs:
  - api_key: opsgenie-key
    tags: "{{ (index .Alerts 0).Labels.alertname }},{{ (index .Alerts 0).Labels.cluster_type }},{{ (index .Alerts 0).Labels.severity }},{{ (index .Alerts 0).Labels.team }},{{ (index .Alerts 0).Labels.area }},{{ (index .Alerts 0).Labels.service_priority }},{{ (index .Alerts 0).Labels.provider }},{{ (index .Alerts 0).Labels.installation }},{{ (index .Alerts 0).Labels.pipeline }}"

- name: team_ops_slack
  slack_configs:
  - channel: '#alert-test-test-installation'
    send_resolved: true
    actions:
    - type: button
      text: ':green_book: OpsRecipe'
      url: '{{ template "__runbookurl" . }}'
      style: '{{ if eq .Status "firing" }}primary{{ else }}default{{ end }}'
    - type: button
      text: ':coffin: Linked PMs'
      url: '{{ template "__alert_linked_postmortems" . }}'
    - type: button
      text: ':mag: Query'
      url: '{{ template "__prometheusurl" . }}'
    - type: button
      text: ':grafana: Dashboard'
      url: '{{ template "__dashboardurl" . }}'
    - type: button
      text: ':no_bell: Silence'
      url: '{{ template "__alert_silence_link" . }}'
      style: '{{ if eq .Status "firing" }}danger{{ else }}default{{ end }}'

inhibit_rules:
- source_matchers:
  - inhibit_kube_state_metrics_down=true
  target_matchers:
  - cancel_if_kube_state_metrics_down=true
  equal: [cluster_id]

- source_matchers:
  - inhibit_kube_state_metrics_down=true
  - cluster_id=test-installation
  target_matchers:
  - cancel_if_mc_kube_state_metrics_down=true

- source_matchers:
  - inhibit_kube_state_metrics_down=true
  target_matchers:
  - cancel_if_any_kube_state_metrics_down=true

- source_matchers:
  - cluster_status_creating=true
  target_matchers:
  - cancel_if_cluster_status_creating=true
  equal: [cluster_id]

- source_matchers:
  - cluster_status_created=true
  target_matchers:
  - cancel_if_cluster_status_created=true
  equal: [cluster_id]

- source_matchers:
  - cluster_status_updating=true
  target_matchers:
  - cancel_if_cluster_status_updating=true
  equal: [cluster_id]

- source_matchers:
  - cluster_status_updated=true
  target_matchers:
  - cancel_if_cluster_status_updated=true
  equal: [cluster_id]

- source_matchers:
  - cluster_status_deleting=true
  target_matchers:
  - cancel_if_cluster_status_deleting=true
  equal: [cluster_id]

- source_matchers:
  - cluster_with_no_nodepools=true
  target_matchers:
  - cancel_if_cluster_with_no_nodepools=true
  equal: [cluster_id]

- source_matchers:
  - cluster_with_scaling_nodepools=true
  target_matchers:
  - cancel_if_cluster_with_scaling_nodepools=true
  equal: [cluster_id]

- source_matchers:
  - cluster_with_notready_nodepools=true
  target_matchers:
  - cancel_if_cluster_with_notready_nodepools=true
  equal: [cluster_id]

- source_matchers:
  - cluster_control_plane_unhealthy=true
  target_matchers:
  - cancel_if_cluster_control_plane_unhealthy=true
  equal: [cluster_id]

- source_matchers:
  - cluster_control_plane_unhealthy=true
  target_matchers:
  - cancel_if_any_cluster_control_plane_unhealthy=true

- source_matchers:
  - instance_state_not_running=true
  target_matchers:
  - cancel_if_instance_state_not_running=true
  equal: [node]

- source_matchers:
  - kiam_has_errors=true
  target_matchers:
  - cancel_if_kiam_has_errors=true
  equal: [cluster_id]

- source_matchers:
  - kubelet_down=true
  target_matchers:
  - cancel_if_kubelet_down=true
  equal: [cluster_id, ip]

- source_matchers:
  - kubelet_down=true
  target_matchers:
  - cancel_if_any_kubelet_down=true
  equal: [cluster_id]

- source_matchers:
  - kubelet_not_ready=true
  target_matchers:
  - cancel_if_kubelet_not_ready=true
  equal: [cluster_id, ip]

- source_matchers:
  - kubelet_not_ready=true
  target_matchers:
  - cancel_if_any_kubelet_not_ready=true
  equal: [cluster_id]

- source_matchers:
  - nodes_down=true
  target_matchers:
  - cancel_if_nodes_down=true
  equal: [cluster_id]

- source_matchers:
  - control_plane_node_down=true
  target_matchers:
  - cancel_if_control_plane_node_down=true
  equal: [cluster_id]

- source_matchers:
  - outside_working_hours=true
  target_matchers:
  - cancel_if_outside_working_hours=true

- source_matchers:
  - has_worker_nodes=false
  target_matchers:
  - cancel_if_cluster_has_no_workers=true
  equal: [cluster_id]

- source_matchers:
    - cluster_is_not_running_prometheus_agent=true
  target_matchers:
    - cancel_if_cluster_is_not_running_prometheus_agent=true
  equal: [cluster_id]

- source_matchers:
    - inhibit_prometheus_agent_down=true
  target_matchers:
    - cancel_if_prometheus_agent_down=true
  equal: [cluster_id]

- source_matchers:
    - stack_failed=true
  target_matchers:
    - cancel_if_stack_failed=true
