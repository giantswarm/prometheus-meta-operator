metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: kubernetes
    app.kubernetes.io/managed-by: prometheus-meta-operator
    app.kubernetes.io/name: prometheus
    giantswarm.io/cluster: kubernetes
  name: kubernetes
  namespace: kubernetes-prometheus
spec:
  additionalAlertManagerConfigs:
    key: alertmanager-additional.yaml
    name: new-alertmanager-config
  additionalScrapeConfigs:
    key: prometheus-additional.yaml
    name: additional-scrape-configs
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: role
            operator: NotIn
            values:
            - master
  apiserverConfig:
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    host: https://127.0.0.1:443
    tlsConfig:
      ca: {}
      caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      cert: {}
      insecureSkipVerify: true
  arbitraryFSAccessThroughSMs: {}
  externalLabels:
    cluster_id: kubernetes
    cluster_type: management_cluster
    customer: Giant Swarm
    installation: test-installation
    pipeline: testing
    provider: provider
    region: onprem
  externalUrl: http://prometheus/kubernetes
  image: quay.io/giantswarm/prometheus:v2.28.1
  logLevel: debug
  podMetadata:
    labels:
      app.kubernetes.io/instance: kubernetes
      app.kubernetes.io/managed-by: prometheus-meta-operator
      app.kubernetes.io/name: prometheus
      giantswarm.io/cluster: kubernetes
      giantswarm.io/monitoring: "true"
  priorityClassName: prometheus
  remoteWrite:
  - basicAuth:
      password:
        key: password
        name: remote-write
      username:
        key: username
        name: remote-write
    name: kubernetes
    queueConfig:
      capacity: 10000
      maxSamplesPerSend: 1000
      minShards: 10
    url: http://grafana/api/prom/push
    writeRelabelConfigs:
    - action: keep
      regex: (^aggregation:.+|prometheus_tsdb_head_series|prometheus_tsdb_head_samples_appended_total|^slo_.+)
      sourceLabels:
      - __name__
  replicas: 1
  resources:
    limits:
      cpu: 150m
      memory: "1288490188"
    requests:
      cpu: 100m
      memory: "1073741824"
  retention: 2w
  retentionSize: 45Gi
  routePrefix: /kubernetes
  ruleNamespaceSelector:
    matchLabels:
      name: monitoring
  ruleSelector:
    matchExpressions:
    - key: cluster_type
      operator: NotIn
      values:
      - workload_cluster
  rules:
    alert: {}
  secrets:
  - etcd-certificates
  securityContext:
    fsGroup: 2000
    runAsGroup: 65534
    runAsNonRoot: true
    runAsUser: 1000
  serviceMonitorNamespaceSelector:
    matchExpressions:
    - key: giantswarm.io/cluster
      operator: DoesNotExist
  serviceMonitorSelector:
    matchExpressions:
    - key: giantswarm.io/cluster
      operator: DoesNotExist
  storage:
    volumeClaimTemplate:
      metadata: {}
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
      status: {}
  topologySpreadConstraints:
  - labelSelector:
      matchLabels:
        app.kubernetes.io/name: prometheus
    maxSkew: 1
    topologyKey: kubernetes.io/hostname
    whenUnsatisfiable: ScheduleAnyway
  walCompression: true
  web:
    pageTitle: test-installation/kubernetes Prometheus
