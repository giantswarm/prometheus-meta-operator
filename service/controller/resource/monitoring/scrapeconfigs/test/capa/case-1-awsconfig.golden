
# Add scrape configuration for cadvisor
- job_name: alice-prometheus/cadvisor-alice/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: node

    api_server: https://master.alice:443
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: false
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_node_name]
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}:10250/proxy/metrics/cadvisor
  - target_label: app
    replacement: cadvisor
  # Add node name.
  - source_labels: [__meta_kubernetes_node_label_kubernetes_io_hostname]
    target_label: node
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: alice
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: workload_cluster
  # Add provider label.
  - target_label: provider
    replacement: capa
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  metric_relabel_configs:
  - source_labels: [namespace]
    regex: (kube-system|giantswarm.*|kong.*)
    action: keep
# calico-node
- job_name: alice-prometheus/calico-node-alice/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod

    api_server: https://master.alice:443
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: false
  relabel_configs:
  - source_labels: [__address__]
    replacement: ${1}:9091
    target_label: instance
  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (calico-node.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:9091/proxy/metrics
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
    regex: kube-system;calico-node.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: alice
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: workload_cluster
  # Add provider label.
  - target_label: provider
    replacement: capa
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# aws-node
# Add etcd configuration
- job_name: alice-prometheus/etcd-alice/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  
  - role: pod
    namespaces:
      names:
      - kube-system
  

    api_server: https://master.alice:443
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false

  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_container_name]
    regex: (etcd)
    action: keep
  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:2381/proxy/metrics
    action: replace
  - source_labels: [ __meta_kubernetes_pod_name ]
    target_label: pod_name
  - target_label: app
    replacement: etcd
  - source_labels: [__address__]
    target_label: instance
  # Add ip label.
  - target_label: ip
    source_labels: [__meta_kubernetes_node_address_InternalIP]
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: alice
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: workload_cluster
  # Add provider label.
  - target_label: provider
    replacement: capa
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
# Add kubelet configuration
- job_name: alice-prometheus/kubelet-alice/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: node

    api_server: https://master.alice:443
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true
  relabel_configs:
  - target_label: app
    replacement: kubelet
  - source_labels: [__address__]
    target_label: instance
  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_node_name]
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}:10250/proxy/metrics
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: alice
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: workload_cluster
  # Add provider label.
  - target_label: provider
    replacement: capa
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
# kube-proxy
- job_name: alice-prometheus/kube-proxy-alice/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system

    api_server: https://master.alice:443
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    replacement: $1:10249
    target_label: instance
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-proxy.*)
    action: keep
  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-proxy.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10249/proxy/metrics
  - target_label: app
    replacement: kube-proxy
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: alice
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: workload_cluster
  # Add provider label.
  - target_label: provider
    replacement: capa
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# coredns
- job_name: alice-prometheus/coredns-alice/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - kube-system

    api_server: https://master.alice:443
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  - source_labels: [__meta_kubernetes_pod_container_name]
    regex: coredns
    action: keep
  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (coredns.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:9153/proxy/metrics
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: alice
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: workload_cluster
  # Add provider label.
  - target_label: provider
    replacement: capa
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# cert-exporter
- job_name: alice-prometheus/cert-exporter-alice/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:

      - kube-system


    api_server: https://master.alice:443
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: cert-exporter
    action: keep
  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (cert-exporter.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:9005/proxy/metrics
  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: alice
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: workload_cluster
  # Add provider label.
  - target_label: provider
    replacement: capa
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# node-exporter
- job_name: alice-prometheus/node-exporter-alice/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod

    api_server: https://master.alice:443
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true
  relabel_configs:
  - target_label: __address__
    replacement: master.alice:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (node-exporter.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10300/proxy/metrics
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
    regex: kube-system;node-exporter.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_pod_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: alice
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: workload_cluster
  # Add provider label.
  - target_label: provider
    replacement: capa
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  metric_relabel_configs:
  - source_labels: [mountpoint]
    target_label: pod_id
    regex: /var/lib/kubelet/pods/([a-zA-Z0-9-]+)/.*
    action: replace
    replacement: $1
- job_name: alice-prometheus/workload-alice/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints

    api_server: https://master.alice:443
    tls_config:
      ca_file: /etc/prometheus/secrets/cluster-certificates/ca
      cert_file: /etc/prometheus/secrets/cluster-certificates/crt
      key_file: /etc/prometheus/secrets/cluster-certificates/key
      insecure_skip_verify: false
  tls_config:
    ca_file: /etc/prometheus/secrets/cluster-certificates/ca
    cert_file: /etc/prometheus/secrets/cluster-certificates/crt
    key_file: /etc/prometheus/secrets/cluster-certificates/key
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: keep
    # if __meta_kubernetes_service_annotation_giantswarm_io_monitoring_path is present, we use it as the metrics path
  - source_labels: [__meta_kubernetes_service_annotation_giantswarm_io_monitoring_path]
    action: replace
    target_label: __metrics_path__
    regex: (.+)
    # if __meta_kubernetes_service_annotation_giantswarm_io_monitoring_port, we use it as the metrics port
  - source_labels: [__address__, __meta_kubernetes_service_annotation_giantswarm_io_monitoring_port]
    action: replace
    target_label: __address__
    regex: ([^:]+):(\d+);(\d+)
    replacement: $1:$3
    # if the protocol is empty, we set it to http by default, this allows to override the protocol for services using https like prometheus operator
  - source_labels: [__address__, __meta_kubernetes_service_annotation_giantswarm_io_monitoring_protocol]
    action: replace
    target_label: __meta_kubernetes_service_annotation_giantswarm_io_monitoring_protocol
    regex: (.*);
    replacement: "http"
  - source_labels: [__meta_kubernetes_pod_ip, __address__]
    regex: (.*);([^:]+):(\d+)
    replacement: $1:$3
    target_label: instance
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_annotation_giantswarm_io_monitoring_protocol, __meta_kubernetes_pod_name, __address__, __metrics_path__]
    regex: (.*);(.*);(.*);(.+:)(\d+);(.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/${1}/pods/${2}:${3}:${5}/proxy${6}
    action: replace
  - regex: (.*)
    target_label: __address__
    replacement: master.alice:443
    action: replace
  - source_labels: [__meta_kubernetes_service_name]
    regex: (.*)
    target_label: app
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_giantswarm_io_monitoring_app_label]
    regex: (.+)
    target_label: app
    action: replace
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: alice
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: workload_cluster
  # Add provider label.
  - target_label: provider
    replacement: capa
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  metric_relabel_configs:
  # drop metrics with the highest cardinality as they increase Prometheus memory usage
  - source_labels: [__name__]
    regex: (nginx_ingress_controller_bytes_sent_bucket|nginx_ingress_controller_request_size_bucket|nginx_ingress_controller_response_duration_seconds_bucket|nginx_ingress_controller_response_size_bucket)
    action: drop
  - source_labels: [app,deployment]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_type
    replacement: deployment
    action: replace
  - source_labels: [app,daemonset]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_type
    replacement: daemonset
    action: replace
  - source_labels: [app,statefulset]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_type
    replacement: statefulset
    action: replace
  - source_labels: [app,deployment]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_name
    replacement: ${1}
    action: replace
  - source_labels: [app,daemonset]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_name
    replacement: ${1}
    action: replace
  - source_labels: [app,statefulset]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_name
    replacement: ${1}
    action: replace
  - source_labels: [app,label_topology_kubernetes_io_region]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: region
    replacement: ${1}
    action: replace
  - source_labels: [app,label_topology_kubernetes_io_zone]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: zone
    replacement: ${1}
    action: replace
  - action: labeldrop
    regex: "label_topology_kubernetes_io_region|label_topology_kubernetes_io_zone"
  # Override with label for AWS clusters if exists.
  - source_labels: [app,label_giantswarm_io_machine_deployment]
    regex: kube-state-metrics;(.+)
    target_label: nodepool
    replacement: ${1}
    action: replace
  # Override with label for Azure clusters if exists.
  - source_labels: [app,label_giantswarm_io_machine_pool]
    regex: kube-state-metrics;(.+)
    target_label: nodepool
    replacement: ${1}
    action: replace
  - action: labeldrop
    regex: "label_giantswarm_io_machine_pool|label_giantswarm_io_machine_deployment"

# prometheus
- job_name: alice-prometheus/prometheus-alice/0
  honor_labels: true
  scheme: http
  metrics_path: /alice/metrics
  static_configs:
    - targets: ['localhost:9090']
  relabel_configs:
  - replacement: prometheus
    target_label: app
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: alice
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: workload_cluster
  # Add provider label.
  - target_label: provider
    replacement: capa
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
