- job_name: kubernetes-prometheus/kubernetes-apiserver-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_component]
    regex: apiserver
    action: keep
  - target_label: __address__
    replacement: 127.0.0.1:443
  - source_labels: [__meta_kubernetes_endpoint_port_name]
    regex: https
    action: keep
  - target_label: app
    replacement: kubernetes
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker

# Add scrape configuration for docker
- job_name: kubernetes-prometheus/docker-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: node

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - target_label: __address__
    replacement: 127.0.0.1:443
  - source_labels: [__meta_kubernetes_node_name]
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}:9323/proxy/metrics
  - target_label: app
    replacement: docker
  - source_labels: [__meta_kubernetes_node_address_InternalIP]
    replacement: ${1}:9323
    target_label: instance
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  metric_relabel_configs:
  - source_labels: [__name__]
    regex: (engine_daemon_image_actions_seconds_count|process_virtual_memory_bytes|process_resident_memory_bytes)
    action: keep

# falco-exporter
- job_name: kubernetes-prometheus/falco-exporter-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
    regex: falco-exporter
    action: keep
  - source_labels: [__meta_kubernetes_endpoints_label_app_kubernetes_io_name]
    target_label: app
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# Add scrape configuration for cadvisor
- job_name: kubernetes-prometheus/cadvisor-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: node

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  - target_label: __address__
    replacement: 127.0.0.1:443
  - source_labels: [__meta_kubernetes_node_name]
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}:10250/proxy/metrics/cadvisor
  - target_label: app
    replacement: cadvisor
  # Add node name.
  - source_labels: [__meta_kubernetes_node_label_kubernetes_io_hostname]
    target_label: node
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  metric_relabel_configs:
  - source_labels: [namespace]
    regex: (kube-system|giantswarm.*|.*-prometheus|monitoring|draughtsman)
    action: keep
- job_name: kubernetes-prometheus/calico-node-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    replacement: ${1}:9091
    target_label: instance
  - target_label: __address__
    replacement: 127.0.0.1:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (calico-node.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:9091/proxy/metrics
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
    regex: kube-system;calico-node.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation

# Add etcd configuration
- job_name: kubernetes-prometheus/etcd-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: node

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  tls_config:
    ca_file: /etc/prometheus/secrets/etcd-certificates/ca
    cert_file: /etc/prometheus/secrets/etcd-certificates/crt
    key_file: /etc/prometheus/secrets/etcd-certificates/key
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_node_label_role]
    regex: master
    action: keep
  - source_labels: [__address__]
    regex: (.*):10250
    target_label: __address__
    replacement: ${1}:2379
    action: replace
  - target_label: app
    replacement: etcd
  - source_labels: [__address__]
    target_label: instance
  # Add ip label.
  - target_label: ip
    source_labels: [__meta_kubernetes_node_address_InternalIP]
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
# Add kubelet configuration
- job_name: kubernetes-prometheus/kubelet-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: node

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - target_label: app
    replacement: kubelet
  - source_labels: [__address__]
    target_label: instance
  - target_label: __address__
    replacement: 127.0.0.1:443
  - source_labels: [__meta_kubernetes_node_name]
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}:10250/proxy/metrics
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
# kube-controller-manager
- job_name: kubernetes-prometheus/kubernetes-controller-manager-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    replacement: $1:10252
    target_label: instance
  - source_labels: [__meta_kubernetes_pod_container_name]
    regex: (k8s-controller-manager|kube-controller-manager)
    action: keep
  - target_label: __address__
    replacement: 127.0.0.1:443
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10252/proxy/metrics
  - target_label: app
    replacement: kube-controller-manager
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# kube-scheduler
- job_name: kubernetes-prometheus/kubernetes-scheduler-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    replacement: $1:10251
    target_label: instance
  - source_labels: [__meta_kubernetes_pod_container_name]
    regex: (k8s-scheduler|kube-scheduler)
    action: keep
  - target_label: __address__
    replacement: 127.0.0.1:443
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10251/proxy/metrics
  - target_label: app
    replacement: kube-scheduler
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# kube-proxy
- job_name: kubernetes-prometheus/kube-proxy-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    replacement: $1:10249
    target_label: instance
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-proxy.*)
    action: keep
  - target_label: __address__
    replacement: 127.0.0.1:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-proxy.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10249/proxy/metrics
  - target_label: app
    replacement: kube-proxy
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# coredns
- job_name: kubernetes-prometheus/coredns-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - kube-system

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  - source_labels: [__meta_kubernetes_pod_container_name]
    regex: coredns
    action: keep
  - target_label: __address__
    replacement: 127.0.0.1:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (coredns.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:9153/proxy/metrics
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# chart-operator
- job_name: kubernetes-prometheus/chart-operator-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance

  - source_labels: [__meta_kubernetes_service_name]
    regex: chart-operator-unique
    action: keep

  - target_label: __address__
    replacement: 127.0.0.1:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (chart-operator.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/giantswarm/pods/${1}:8000/proxy/metrics
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# net-exporter
- job_name: kubernetes-prometheus/net-exporter-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:

      - monitoring


  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: net-exporter
    action: keep
  - target_label: __address__
    replacement: 127.0.0.1:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (net-exporter.*)
    target_label: __metrics_path__

    replacement: /api/v1/namespaces/monitoring/pods/${1}:8000/proxy/metrics

  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# cert-exporter
- job_name: kubernetes-prometheus/cert-exporter-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:

      - monitoring


  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: cert-exporter
    action: keep
  - target_label: __address__
    replacement: 127.0.0.1:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (cert-exporter.*)
    target_label: __metrics_path__

    replacement: /api/v1/namespaces/monitoring/pods/${1}:9005/proxy/metrics

  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# node-exporter
- job_name: kubernetes-prometheus/node-exporter-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:

      - monitoring


  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: node-exporter
    action: keep
  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  metric_relabel_configs:
  - source_labels: [mountpoint]
    target_label: pod_id
    regex: /var/lib/kubelet/pods/([a-zA-Z0-9-]+)/.*
    action: replace
    replacement: $1
# kube-state-metrics
- job_name: kubernetes-prometheus/kube-state-metrics-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:

      - monitoring


  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: kube-state-metrics
    action: keep
  - target_label: __address__
    replacement: 127.0.0.1:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-state-metrics.*)
    target_label: __metrics_path__

    replacement: /api/v1/namespaces/monitoring/pods/${1}:10301/proxy/metrics

  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation

- job_name: kubernetes-prometheus/workload-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: keep
    # if __meta_kubernetes_service_annotation_giantswarm_io_monitoring_path is present, we use it as the metrics path
  - source_labels: [__meta_kubernetes_service_annotation_giantswarm_io_monitoring_path]
    action: replace
    target_label: __metrics_path__
    regex: (.+)
    # if __meta_kubernetes_service_annotation_giantswarm_io_monitoring_port, we use it as the metrics port
  - source_labels: [__address__, __meta_kubernetes_service_annotation_giantswarm_io_monitoring_port]
    action: replace
    target_label: __address__
    regex: ([^:]+):(\d+);(\d+)
    replacement: $1:$3
  - source_labels: [__meta_kubernetes_pod_ip, __address__]
    regex: (.*);([^:]+):(\d+)
    replacement: $1:$3
    target_label: instance
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name, __address__, __metrics_path__]
    regex: (.*);(.*);(.+:)(\d+);(.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/${1}/pods/${2}:${4}/proxy${5}
    action: replace
  - regex: (.*)
    target_label: __address__
    replacement: 127.0.0.1:443
    action: replace
  - source_labels: [__meta_kubernetes_service_name]
    regex: (.*)
    target_label: app
    action: replace
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  metric_relabel_configs:
  # drop metrics with the highest cardinality as they increase Prometheus memory usage
  - source_labels: [__name__]
    regex: (nginx_ingress_controller_bytes_sent_bucket|nginx_ingress_controller_request_duration_seconds_bucket|nginx_ingress_controller_request_size_bucket|nginx_ingress_controller_response_duration_seconds_bucket|nginx_ingress_controller_response_size_bucket)
    action: drop
  - source_labels: [app,deployment]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_type
    replacement: deployment
    action: replace
  - source_labels: [app,daemonset]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_type
    replacement: daemonset
    action: replace
  - source_labels: [app,statefulset]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_type
    replacement: statefulset
    action: replace
  - source_labels: [app,deployment]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_name
    replacement: ${1}
    action: replace
  - source_labels: [app,daemonset]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_name
    replacement: ${1}
    action: replace
  - source_labels: [app,statefulset]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_name
    replacement: ${1}
    action: replace

# app-operator
- job_name: kubernetes-prometheus/app-operator-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
    regex: app-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# cluster-operator
- job_name: kubernetes-prometheus/cluster-operator-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app]
    regex: cluster-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# etcd-backup-operator
- job_name: kubernetes-prometheus/etcd-backup-operator-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    regex: etcd-backup-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# node-operator
- job_name: kubernetes-prometheus/node-operator-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app]
    regex: node-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# release-operator
- job_name: kubernetes-prometheus/release-operator-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app]
    regex: release-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# organization-operator
- job_name: kubernetes-prometheus/organization-operator-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    regex: organization-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# prometheus-meta-operator
- job_name: kubernetes-prometheus/prometheus-meta-operator-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    regex: prometheus-meta-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# rbac-operator
- job_name: kubernetes-prometheus/rbac-operator-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    regex: rbac-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# cert-operator
- job_name: kubernetes-prometheus/cert-operator-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    regex: cert-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# draughtsman
- job_name: kubernetes-prometheus/draughtsman-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - draughtsman
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app]
    regex: draughtsman
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# app-exporter
- job_name: kubernetes-prometheus/app-exporter-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
    regex: app-exporter
    action: keep
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# vault-exporter
- job_name: kubernetes-prometheus/vault-exporter-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: vault-exporter
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__address__]
    target_label:  instance
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# alertmanager
- job_name: kubernetes-prometheus/alertmanager-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: alertmanager
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# grafana
- job_name: kubernetes-prometheus/grafana-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: grafana
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# fluentbit
- job_name: kubernetes-prometheus/fluentbit-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: fluentbit
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# giantswarm-api
- job_name: kubernetes-prometheus/giantswarm-api-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: api
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# tokend
- job_name: kubernetes-prometheus/tokend-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: tokend
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# companyd
- job_name: kubernetes-prometheus/companyd-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: companyd
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# userd
- job_name: kubernetes-prometheus/userd-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: userd
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# kubernetesd
- job_name: kubernetes-prometheus/kubernetesd-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: kubernetesd
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# credentiald
- job_name: kubernetes-prometheus/credentiald-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: credentiald
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# cluster-service
- job_name: kubernetes-prometheus/cluster-service-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: cluster-service
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation




# kvm-operator
- job_name: kubernetes-prometheus/kvm-operator-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: kvm-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# flannel-operator
- job_name: kubernetes-prometheus/flannel-operator-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: flannel-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# bridge-operator
- job_name: kubernetes-prometheus/bridge-operator-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: bridge-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# ingress-exporter
- job_name: kubernetes-prometheus/ingress-exporter-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: ingress-exporter
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# Mayu
- job_name: kubernetes-prometheus/mayu-kubernetes/0
  honor_labels: true
  scheme: https
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  static_configs:
  - targets:
    - :4080
    labels:
      app: mayu
  relabel_configs:
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation

- job_name: kubernetes-prometheus/vault-kubernetes/0
  honor_labels: true
  scheme: http
  static_configs:
  - targets:
    - vault1.some-installation.test:10300
    labels:
      app: vault
  - targets:
    - vault1.some-installation.test:9005
    labels:
      app: cert-exporter
  relabel_configs:
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
# nginx-ingress-controller
- job_name: kubernetes-prometheus/nginx-ingress-controller-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - kube-system

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring]
    regex: "true"
    action: drop
  - source_labels: [__meta_kubernetes_service_label_k8s_app]
    regex: nginx-ingress-controller.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_ip]
    target_label: instance
    replacement: ${1}:10254
  - target_label: __address__
    replacement: 127.0.0.1:443
  - target_label: app
    replacement: nginx-ingress-controller
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10254/proxy/metrics
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # If role is empty, we default to worker
  - source_labels: [__meta_kubernetes_node_label_role,role]
    regex: (.*); # This regex matches only if role is empty
    target_label: role
    replacement: worker

# prometheus
- job_name: kubernetes-prometheus/prometheus-kubernetes/0
  honor_labels: true
  scheme: http
  metrics_path: /kubernetes/metrics
  static_configs:
    - targets: ['localhost:9090']
  relabel_configs:
  - replacement: prometheus
    target_label: app
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
