
- job_name: kubernetes-prometheus/kubernetes-apiserver-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_component]
    regex: apiserver
    action: keep
  - source_labels: [__meta_kubernetes_endpoint_port_name]
    regex: https
    action: keep
  - target_label: app
    replacement: kubernetes
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
# Add scrape configuration for docker
- job_name: kubernetes-prometheus/docker-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: node

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - target_label: __address__
    replacement: kubernetes.default:443
  - source_labels: [__meta_kubernetes_node_name]
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}:9323/proxy/metrics
  - target_label: app
    replacement: docker
  - source_labels: [__meta_kubernetes_node_address_InternalIP]
    replacement: ${1}:9323
    target_label: instance
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  metric_relabel_configs:
  - source_labels: [__name__]
    regex: (engine_daemon_image_actions_seconds_count|process_virtual_memory_bytes|process_resident_memory_bytes)
    action: keep
# falco-exporter
- job_name: kubernetes-prometheus/falco-exporter-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
    regex: falco-exporter
    action: keep
  - source_labels: [__meta_kubernetes_endpoints_label_app_kubernetes_io_name]
    target_label: app
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# Add kubelet configuration
- job_name: kubernetes-prometheus/kubelet-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: node

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - target_label: app
    replacement: kubelet
  - source_labels: [__address__]
    target_label: instance
  - target_label: __address__
    replacement: kubernetes.default:443
  - source_labels: [__meta_kubernetes_node_name]
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}:10250/proxy/metrics
  - source_labels: [__meta_kubernetes_node_name]
    target_label: node
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  metric_relabel_configs:
  # drop unused rest client metrics
  - source_labels: [__name__]
    regex: rest_client_(rate_limiter_duration_seconds_bucket|request_size_bytes_bucket|response_size_bytes_bucket)
    action: drop
  # drop uid label from kubelet
  - action: labeldrop
    regex: uid
# Add scrape configuration for cadvisor
- job_name: kubernetes-prometheus/cadvisor-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: node

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  - target_label: __address__
    replacement: kubernetes.default:443
  - source_labels: [__meta_kubernetes_node_name]
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}:10250/proxy/metrics/cadvisor
  - target_label: app
    replacement: cadvisor
  # Add node name.
  - source_labels: [__meta_kubernetes_node_label_kubernetes_io_hostname]
    target_label: node
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  metric_relabel_configs:
  # drop id and name labels from cAdvisor as they do not provide value but use a lot of RAM
  - action: labeldrop
    regex: id|name
  # dropping explained here https://github.com/giantswarm/giantswarm/issues/26361
  - source_labels: [__name__]
    regex: container_(blkio_device_usage_total|network_transmit_errors_total|network_receive_errors_total|tasks_state|memory_failures_total|memory_max_usage_bytes|cpu_load_average_10s|memory_failcnt|cpu_system_seconds_total)
    action: drop
  - source_labels: [namespace]
    regex: (kube-system|giantswarm.*|.*-prometheus|monitoring|flux-.*|kyverno|loki)
    action: keep
# calico-node
- job_name: kubernetes-prometheus/calico-node-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    replacement: ${1}:9091
    target_label: instance
  - target_label: __address__
    replacement: kubernetes.default:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (calico-node.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:9091/proxy/metrics
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
    regex: kube-system;calico-node.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# aws-node
# Add etcd configuration
- job_name: kubernetes-prometheus/etcd-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  
  - role: node
  

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  tls_config:
    ca_file: /etc/prometheus/secrets/etcd-certificates/ca
    cert_file: /etc/prometheus/secrets/etcd-certificates/crt
    key_file: /etc/prometheus/secrets/etcd-certificates/key
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_node_label_role]
    regex: control-plane|master
    action: keep
  # by default use node address
  - source_labels: [__address__]
    regex: (.*):10250
    target_label: __address__
    replacement: ${1}:2379
    action: replace

  # if the 'ip' label is present, use the value
  - source_labels: [__meta_kubernetes_node_label_ip]
    regex: (.+)
    target_label: __address__
    replacement: ${1}:2379
    action: replace
  - target_label: app
    replacement: etcd
  - source_labels: [__address__]
    target_label: instance
  # Add ip label.
  - target_label: ip
    source_labels: [__meta_kubernetes_node_address_InternalIP]
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
# kube-controller-manager
- job_name: kubernetes-prometheus/kubernetes-controller-manager-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    replacement: 10257
    target_label: __tmp_port
  - source_labels: [__meta_kubernetes_pod_annotationpresent_giantswarm_io_monitoring_port,__meta_kubernetes_pod_annotation_giantswarm_io_monitoring_port]
    action: replace
    regex: true;(\d+)
    replacement: $1
    target_label: __tmp_port
  - source_labels: [__address__, __tmp_port]
    target_label: instance
    regex: (.+);(.+)
    replacement: $1:$2
  - source_labels: [__meta_kubernetes_pod_container_name]
    regex: (k8s-controller-manager|kube-controller-manager)
    action: keep
  - target_label: __address__
    replacement: kubernetes.default:443
  - source_labels: [__meta_kubernetes_pod_name, __tmp_port]
    target_label: __metrics_path__
    regex: (.+);(\d+)
    replacement: /api/v1/namespaces/kube-system/pods/https:${1}:${2}/proxy/metrics
  - target_label: app
    replacement: kube-controller-manager
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  metric_relabel_configs:
  # drop unused rest client metrics
  - source_labels: [__name__]
    regex: rest_client_(rate_limiter_duration_seconds_bucket|request_size_bytes_bucket|response_size_bytes_bucket)
    action: drop
# kube-scheduler
- job_name: kubernetes-prometheus/kubernetes-scheduler-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    replacement: 10259
    target_label: __tmp_port
  - source_labels: [__meta_kubernetes_pod_annotationpresent_giantswarm_io_monitoring_port,__meta_kubernetes_pod_annotation_giantswarm_io_monitoring_port]
    action: replace
    regex: true;(\d+)
    replacement: $1
    target_label: __tmp_port
  - source_labels: [__address__, __tmp_port]
    target_label: instance
    regex: (.+);(.+)
    replacement: $1:$2
  - source_labels: [__meta_kubernetes_pod_container_name]
    regex: (k8s-scheduler|kube-scheduler)
    action: keep
  - target_label: __address__
    replacement: kubernetes.default:443
  - source_labels: [__meta_kubernetes_pod_name, __tmp_port]
    target_label: __metrics_path__
    regex: (.+);(\d+)
    replacement: /api/v1/namespaces/kube-system/pods/https:${1}:${2}/proxy/metrics
  - target_label: app
    replacement: kube-scheduler
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  metric_relabel_configs:
  # drop unused rest client metrics
  - source_labels: [__name__]
    regex: rest_client_(rate_limiter_duration_seconds_bucket|request_size_bytes_bucket|response_size_bytes_bucket)
    action: drop
# kube-proxy
- job_name: kubernetes-prometheus/kube-proxy-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    replacement: $1:10249
    target_label: instance
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-proxy.*)
    action: keep
  - target_label: __address__
    replacement: kubernetes.default:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (kube-proxy.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10249/proxy/metrics
  - target_label: app
    replacement: kube-proxy
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  metric_relabel_configs:
  # drop unused rest client metrics
  - source_labels: [__name__]
    regex: rest_client_(rate_limiter_duration_seconds_bucket|request_size_bytes_bucket|response_size_bytes_bucket)
    action: drop
# coredns
- job_name: kubernetes-prometheus/coredns-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - kube-system

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  - source_labels: [__meta_kubernetes_pod_container_name]
    regex: coredns
    action: keep
  - target_label: __address__
    replacement: kubernetes.default:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (coredns.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:9153/proxy/metrics
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  metric_relabel_configs:
  # drop unused coredns metrics with the highest cardinality as they increase Prometheus memory usage
  - source_labels: [__name__]
    regex: coredns_dns_(response_size_bytes_bucket|request_size_bytes_bucket)
    action: drop
# cert-exporter
- job_name: kubernetes-prometheus/cert-exporter-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:

      - monitoring


  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__address__]
    target_label: instance
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: cert-exporter
    action: keep
  - target_label: __address__
    replacement: kubernetes.default:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (cert-exporter.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/monitoring/pods/${1}:9005/proxy/metrics
  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# node-exporter
- job_name: kubernetes-prometheus/node-exporter-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - target_label: __address__
    replacement: kubernetes.default:443
  - source_labels: [__meta_kubernetes_pod_name]
    regex: (node-exporter.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/monitoring/pods/${1}:10300/proxy/metrics
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
    regex: monitoring;node-exporter.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_pod_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  metric_relabel_configs:
  # drop unused metrics with the highest cardinality as they increase Prometheus memory usage
  - source_labels: [__name__]
    regex: node_(filesystem_files|filesystem_readonly|nfs_requests_total|network_carrier|network_transmit_colls_total|network_carrier_changes_total|network_transmit_packets_total|network_carrier_down_changes_total|network_carrier_up_changes_total|network_iface_id|xfs_.+|ethtool_.+)
    action: drop
- job_name: kubernetes-prometheus/workload-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: keep
    # if __meta_kubernetes_service_annotation_giantswarm_io_monitoring_path is present, we use it as the metrics path
  - source_labels: [__meta_kubernetes_service_annotation_giantswarm_io_monitoring_path]
    action: replace
    target_label: __metrics_path__
    regex: (.+)
    # if __meta_kubernetes_service_annotation_giantswarm_io_monitoring_port, we use it as the metrics port
  - source_labels: [__address__, __meta_kubernetes_service_annotation_giantswarm_io_monitoring_port]
    action: replace
    target_label: __address__
    regex: ([^:]+):(\d+);(\d+)
    replacement: $1:$3
    # if the protocol is empty, we set it to http by default, this allows to override the protocol for services using https like prometheus operator
  - source_labels: [__address__, __meta_kubernetes_service_annotation_giantswarm_io_monitoring_protocol]
    action: replace
    target_label: __meta_kubernetes_service_annotation_giantswarm_io_monitoring_protocol
    regex: (.*);
    replacement: "http"
  - source_labels: [__meta_kubernetes_pod_ip, __address__]
    regex: (.*);([^:]+):(\d+)
    replacement: $1:$3
    target_label: instance
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_annotation_giantswarm_io_monitoring_protocol, __meta_kubernetes_pod_name, __address__, __metrics_path__]
    regex: (.*);(.*);(.*);(.+:)(\d+);(.*)
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/${1}/pods/${2}:${3}:${5}/proxy${6}
    action: replace
  - regex: (.*)
    target_label: __address__
    replacement: kubernetes.default:443
    action: replace
  - source_labels: [__meta_kubernetes_service_name]
    regex: (.*)
    target_label: app
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_giantswarm_io_monitoring_app_label]
    regex: (.+)
    target_label: app
    action: replace
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  metric_relabel_configs:
  # drop unused nginx metrics with the highest cardinality as they increase Prometheus memory usage
  - source_labels: [__name__]
    regex: nginx_ingress_controller_(bytes_sent_bucket|request_size_bucket|response_duration_seconds_bucket|response_size_bucket|request_duration_seconds_count|connect_duration_seconds_bucket|header_duration_seconds_bucket|bytes_sent_count|request_duration_seconds_sum|bytes_sent_sum|request_size_count|response_size_count|response_duration_seconds_sum|response_duration_seconds_count|ingress_upstream_latency_seconds|ingress_upstream_latency_seconds_sum|ingress_upstream_latency_seconds_count)
    action: drop
  # drop unused kong metrics with the highest cardinality as they increase Prometheus memory usage
  - source_labels: [__name__]
    regex: kong_(upstream_target_health|latency_bucket|latency_count|latency_sum)
    action: drop
  # drop unused kube-state-metrics metrics with the highest cardinality as they increase Prometheus memory usage
  - source_labels: [__name__]
    regex: kube_(.+_annotations|secret_type|pod_status_qos_class|pod_tolerations|pod_status_scheduled|replicaset_metadata_generation|replicaset_status_observed_generation|replicaset_annotations|replicaset_status_fully_labeled_replicas|.+_metadata_resource_version)
    action: drop
  # drop unused promtail/loki metrics
  - source_labels: [__name__]
    regex: promtail_request_duration_seconds_bucket|loki_request_duration_seconds_bucket
    action: drop
  # drop unused rest client metrics
  - source_labels: [__name__]
    regex: rest_client_(rate_limiter_duration_seconds_bucket|request_size_bytes_bucket|response_size_bytes_bucket)
    action: drop
  # drop image_id label from kube-state-metrics
  - source_labels: [app,image_id]
    separator: ;
    regex: kube-state-metrics;(.+)
    replacement: ""
    action: replace
    target_label: image_id
  - source_labels: [app,deployment]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_type
    replacement: deployment
    action: replace
  - source_labels: [app,daemonset]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_type
    replacement: daemonset
    action: replace
  - source_labels: [app,statefulset]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_type
    replacement: statefulset
    action: replace
  - source_labels: [app,deployment]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_name
    replacement: ${1}
    action: replace
  - source_labels: [app,daemonset]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_name
    replacement: ${1}
    action: replace
  - source_labels: [app,statefulset]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: workload_name
    replacement: ${1}
    action: replace
  - source_labels: [app,label_topology_kubernetes_io_region]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: region
    replacement: ${1}
    action: replace
  - source_labels: [app,label_topology_kubernetes_io_zone]
    separator: ;
    regex: kube-state-metrics;(.+)
    target_label: zone
    replacement: ${1}
    action: replace
  - action: labeldrop
    regex: label_topology_kubernetes_io_region|label_topology_kubernetes_io_zone
  # Override with label for AWS clusters if exists.
  - source_labels: [app,label_giantswarm_io_machine_deployment]
    regex: kube-state-metrics;(.+)
    target_label: nodepool
    replacement: ${1}
    action: replace
  # Override with label for Azure clusters if exists.
  - source_labels: [app,label_giantswarm_io_machine_pool]
    regex: kube-state-metrics;(.+)
    target_label: nodepool
    replacement: ${1}
    action: replace
  - action: labeldrop
    regex: label_giantswarm_io_machine_pool|label_giantswarm_io_machine_deployment

# cluster-operator before 3.2.0
- job_name: kubernetes-prometheus/cluster-operator-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app]
    regex: cluster-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# cert-operator (missing label)
- job_name: kubernetes-prometheus/cert-operator-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    regex: cert-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    target_label: app
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_version]
    target_label: version
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# fluentbit
- job_name: kubernetes-prometheus/fluentbit-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: fluentbit
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# giantswarm-api (missing label)
- job_name: kubernetes-prometheus/giantswarm-api-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: api
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# tokend (missing label)
- job_name: kubernetes-prometheus/tokend-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: tokend
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# companyd (missing label)
- job_name: kubernetes-prometheus/companyd-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: companyd
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# userd (missing label)
- job_name: kubernetes-prometheus/userd-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: userd
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# kubernetesd (missing label)
- job_name: kubernetes-prometheus/kubernetesd-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: kubernetesd
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# credentiald (missing label)
- job_name: kubernetes-prometheus/credentiald-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: credentiald
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# cluster-service (missing label)
- job_name: kubernetes-prometheus/cluster-service-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: cluster-service
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    regex: true
    action: keep
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    regex: (.+)
    target_label: __metrics_path__
    replacement: $1
    action: replace
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: (.+)(?::\d+);(\d+)
    target_label: __address__
    replacement: $1:$2
    action: replace
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    regex: (https?)
    target_label: __scheme__
    replacement: $1
    action: replace
  - source_labels: [__meta_kubernetes_pod_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo

# installation-specific configs from config repo
- job_name: test1
  static_configs:
  - targets:
    - 1.1.1.1:123
  relabel_configs:
  - source_labels: [__address__]
    target_label: __param_target
- job_name: test2
  static_configs:
  - targets:
    - 8.8.8.8:123
  relabel_configs:
  - source_labels: [__address__]
    target_label: __param_target

# flannel-operator (missing label)
- job_name: kubernetes-prometheus/flannel-operator-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: flannel-operator
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# bridge-operator (missing label)
- job_name: kubernetes-prometheus/bridge-operator-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - giantswarm
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: bridge-operator
    action: keep
  - source_labels: [__meta_kubernetes_service_label_app]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# ingress-exporter (missing label)
- job_name: kubernetes-prometheus/ingress-exporter-kubernetes/0
  honor_labels: true
  scheme: http
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - monitoring
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app]
    regex: ingress-exporter
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: app
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# Mayu
- job_name: kubernetes-prometheus/mayu-kubernetes/0
  honor_labels: true
  scheme: https
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  static_configs:
  - targets:
    - :4080
    labels:
      app: mayu
  relabel_configs:
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo


- job_name: kubernetes-prometheus/vault-kubernetes/0
  honor_labels: true
  scheme: http
  static_configs:
  - targets:
    - vault1.some-installation.test:10300
    labels:
      app: vault
  - targets:
    - vault1.some-installation.test:9005
    labels:
      app: cert-exporter
  - targets:
    - vault1.some-installation.test:2112
    labels:
      app: vault-etcd-backups-exporter
  relabel_configs:
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo

# nginx-ingress-controller
- job_name: kubernetes-prometheus/nginx-ingress-controller-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - kube-system

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring]
    regex: "true"
    action: drop
  - source_labels: [__meta_kubernetes_service_label_k8s_app]
    regex: nginx-ingress-controller.*
    action: keep
  - source_labels: [__meta_kubernetes_pod_ip]
    target_label: instance
    replacement: ${1}:10254
  - target_label: __address__
    replacement: kubernetes.default:443
  - target_label: app
    replacement: nginx-ingress-controller
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: __metrics_path__
    replacement: /api/v1/namespaces/kube-system/pods/${1}:10254/proxy/metrics
  - source_labels: [__meta_kubernetes_service_annotationpresent_giantswarm_io_monitoring, __meta_kubernetes_service_labelpresent_giantswarm_io_monitoring]
    regex: .*(true).*
    action: drop
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  metric_relabel_configs:
  # drop unused nginx metrics with the highest cardinality as they increase Prometheus memory usage
  - source_labels: [__name__]
    regex: nginx_ingress_controller_(bytes_sent_bucket|request_size_bucket|response_duration_seconds_bucket|response_size_bucket|request_duration_seconds_count|connect_duration_seconds_bucket|header_duration_seconds_bucket|bytes_sent_count|request_duration_seconds_sum|bytes_sent_sum|request_size_count|response_size_count|response_duration_seconds_sum|response_duration_seconds_count|ingress_upstream_latency_seconds|ingress_upstream_latency_seconds_sum|ingress_upstream_latency_seconds_count)
    action: drop

# prometheus
- job_name: kubernetes-prometheus/prometheus-kubernetes/0
  honor_labels: true
  scheme: http
  metrics_path: /kubernetes/metrics
  static_configs:
    - targets: ['localhost:9090']
  relabel_configs:
  - replacement: prometheus
    target_label: app
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo
# cilium agent and cilium operator
- job_name: kubernetes-prometheus/cilium-kubernetes/0
  honor_labels: true
  scheme: https
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - kube-system

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  relabel_configs:
  - replacement: http
    target_label: __scheme__
  - source_labels: [__meta_kubernetes_pod_container_name]
    regex: (cilium-agent|cilium-operator)
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_port_number]
    regex: (9090|6942)
    action: keep
  - source_labels: [__meta_kubernetes_pod_container_name]
    regex: (.*)
    target_label: app
    replacement: $1
  # Add namespace label.
  - source_labels: [__meta_kubernetes_namespace]
    target_label: namespace
  # Add pod label.
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: pod
  # Add container label.
  - source_labels: [__meta_kubernetes_pod_container_name]
    target_label: container
  # Add node label.
  - source_labels: [__meta_kubernetes_pod_node_name]
    target_label: node
  # Add role label.
  - source_labels: [__meta_kubernetes_node_label_role]
    target_label: role
  # Add cluster_id label.
  - target_label: cluster_id
    replacement: kubernetes
  # Add cluster_type label.
  - target_label: cluster_type
    replacement: management_cluster
  # Add provider label.
  - target_label: provider
    replacement: kvm
  # Add installation label.
  - target_label: installation
    replacement: test-installation
  # Add priority label.
  - target_label: service_priority
    replacement: highest
  # Add organization label.
  - target_label: organization
    replacement: my-organization 
  # Add customer label.
  - target_label: customer
    replacement: pmo

