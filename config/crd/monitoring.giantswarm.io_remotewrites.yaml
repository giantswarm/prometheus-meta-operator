---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: remotewrites.monitoring.giantswarm.io
spec:
  group: monitoring.giantswarm.io
  names:
    categories:
    - common
    - giantswarm
    kind: RemoteWrite
    listKind: RemoteWriteList
    plural: remotewrites
    singular: remotewrite
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RemoteWrite represents schema for managed RemoteWrites in Prometheus.
          Reconciled by prometheus-meta-operator.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              clusterSelector:
                description: A label selector is a label query over a set of resources.
                  The result of matchLabels and matchExpressions are ANDed. An empty
                  label selector matches all objects. A null label selector matches
                  no objects.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              remoteWrite:
                description: RemoteWriteSpec defines the remote_write configuration
                  for prometheus.
                properties:
                  authorization:
                    description: Authorization section for remote write
                    properties:
                      credentials:
                        description: The secret's key that contains the credentials
                          of the request
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      credentialsFile:
                        description: File to read a secret from, mutually exclusive
                          with Credentials (from SafeAuthorization)
                        type: string
                      type:
                        description: Set the authentication type. Defaults to Bearer,
                          Basic will cause an error
                        type: string
                    type: object
                  basicAuth:
                    description: BasicAuth for the URL.
                    properties:
                      password:
                        description: The secret in the service monitor namespace that
                          contains the password for authentication.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      username:
                        description: The secret in the service monitor namespace that
                          contains the username for authentication.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                  bearerToken:
                    description: Bearer token for remote write.
                    type: string
                  bearerTokenFile:
                    description: File to read bearer token for remote write.
                    type: string
                  headers:
                    additionalProperties:
                      type: string
                    description: Custom HTTP headers to be sent along with each remote
                      write request. Be aware that headers that are set by Prometheus
                      itself can't be overwritten. Only valid in Prometheus versions
                      2.25.0 and newer.
                    type: object
                  metadataConfig:
                    description: MetadataConfig configures the sending of series metadata
                      to remote storage.
                    properties:
                      send:
                        description: Whether metric metadata is sent to remote storage
                          or not.
                        type: boolean
                      sendInterval:
                        description: How frequently metric metadata is sent to remote
                          storage.
                        type: string
                    type: object
                  name:
                    description: The name of the remote write queue, must be unique
                      if specified. The name is used in metrics and logging in order
                      to differentiate queues. Only valid in Prometheus versions 2.15.0
                      and newer.
                    type: string
                  oauth2:
                    description: OAuth2 for the URL. Only valid in Prometheus versions
                      2.27.0 and newer.
                    properties:
                      clientId:
                        description: The secret or configmap containing the OAuth2
                          client id
                        properties:
                          configMap:
                            description: ConfigMap containing data to use for the
                              targets.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          secret:
                            description: Secret containing data to use for the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                      clientSecret:
                        description: The secret containing the OAuth2 client secret
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      endpointParams:
                        additionalProperties:
                          type: string
                        description: Parameters to append to the token URL
                        type: object
                      scopes:
                        description: OAuth2 scopes used for the token request
                        items:
                          type: string
                        type: array
                      tokenUrl:
                        description: The URL to fetch the token from
                        minLength: 1
                        type: string
                    required:
                    - clientId
                    - clientSecret
                    - tokenUrl
                    type: object
                  proxyUrl:
                    description: Optional ProxyURL
                    type: string
                  queueConfig:
                    description: QueueConfig allows tuning of the remote write queue
                      parameters.
                    properties:
                      batchSendDeadline:
                        description: BatchSendDeadline is the maximum time a sample
                          will wait in buffer.
                        type: string
                      capacity:
                        description: Capacity is the number of samples to buffer per
                          shard before we start dropping them.
                        type: integer
                      maxBackoff:
                        description: MaxBackoff is the maximum retry delay.
                        type: string
                      maxRetries:
                        description: MaxRetries is the maximum number of times to
                          retry a batch on recoverable errors.
                        type: integer
                      maxSamplesPerSend:
                        description: MaxSamplesPerSend is the maximum number of samples
                          per send.
                        type: integer
                      maxShards:
                        description: MaxShards is the maximum number of shards, i.e.
                          amount of concurrency.
                        type: integer
                      minBackoff:
                        description: MinBackoff is the initial retry delay. Gets doubled
                          for every retry.
                        type: string
                      minShards:
                        description: MinShards is the minimum number of shards, i.e.
                          amount of concurrency.
                        type: integer
                    type: object
                  remoteTimeout:
                    description: Timeout for requests to the remote write endpoint.
                    type: string
                  sendExemplars:
                    description: Enables sending of exemplars over remote write. Note
                      that exemplar-storage itself must be enabled using the enableFeature
                      option for exemplars to be scraped in the first place.  Only
                      valid in Prometheus versions 2.27.0 and newer.
                    type: boolean
                  sigv4:
                    description: Sigv4 allows to configures AWS's Signature Verification
                      4
                    properties:
                      accessKey:
                        description: AccessKey is the AWS API key. If blank, the environment
                          variable `AWS_ACCESS_KEY_ID` is used.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      profile:
                        description: Profile is the named AWS profile used to authenticate.
                        type: string
                      region:
                        description: Region is the AWS region. If blank, the region
                          from the default credentials chain used.
                        type: string
                      roleArn:
                        description: RoleArn is the named AWS profile used to authenticate.
                        type: string
                      secretKey:
                        description: SecretKey is the AWS API secret. If blank, the
                          environment variable `AWS_SECRET_ACCESS_KEY` is used.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                  tlsConfig:
                    description: TLS Config to use for remote write.
                    properties:
                      ca:
                        description: Struct containing the CA cert to use for the
                          targets.
                        properties:
                          configMap:
                            description: ConfigMap containing data to use for the
                              targets.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          secret:
                            description: Secret containing data to use for the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                      caFile:
                        description: Path to the CA cert in the Prometheus container
                          to use for the targets.
                        type: string
                      cert:
                        description: Struct containing the client cert file for the
                          targets.
                        properties:
                          configMap:
                            description: ConfigMap containing data to use for the
                              targets.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          secret:
                            description: Secret containing data to use for the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                      certFile:
                        description: Path to the client cert file in the Prometheus
                          container for the targets.
                        type: string
                      insecureSkipVerify:
                        description: Disable target certificate validation.
                        type: boolean
                      keyFile:
                        description: Path to the client key file in the Prometheus
                          container for the targets.
                        type: string
                      keySecret:
                        description: Secret containing the client key file for the
                          targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      serverName:
                        description: Used to verify the hostname for the targets.
                        type: string
                    type: object
                  url:
                    description: The URL of the endpoint to send samples to.
                    type: string
                  writeRelabelConfigs:
                    description: The list of remote write relabel configurations.
                    items:
                      description: 'RelabelConfig allows dynamic rewriting of the
                        label set, being applied to samples before ingestion. It defines
                        `<metric_relabel_configs>`-section of Prometheus configuration.
                        More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                      properties:
                        action:
                          description: Action to perform based on regex matching.
                            Default is 'replace'
                          type: string
                        modulus:
                          description: Modulus to take of the hash of the source label
                            values.
                          format: int64
                          type: integer
                        regex:
                          description: Regular expression against which the extracted
                            value is matched. Default is '(.*)'
                          type: string
                        replacement:
                          description: Replacement value against which a regex replace
                            is performed if the regular expression matches. Regex
                            capture groups are available. Default is '$1'
                          type: string
                        separator:
                          description: Separator placed between concatenated source
                            label values. default is ';'.
                          type: string
                        sourceLabels:
                          description: The source labels select values from existing
                            labels. Their content is concatenated using the configured
                            separator and matched against the configured regular expression
                            for the replace, keep, and drop actions.
                          items:
                            type: string
                          type: array
                        targetLabel:
                          description: Label to which the resulting value is written
                            in a replace action. It is mandatory for replace actions.
                            Regex capture groups are available.
                          type: string
                      type: object
                    type: array
                required:
                - url
                type: object
            required:
            - clusterSelector
            - remoteWrite
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
